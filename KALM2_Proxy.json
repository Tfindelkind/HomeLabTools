{"status": {"state": "ACTIVE", "message_list": [], "description": "", "resources": {"service_definition_list": [{"singleton": false, "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "e066f4ba-fe62-4c4a-9e68-057f73f6583e", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Dashboard", "uuid": "9fe556ea-1015-4db9-ac2e-58bded0ca13f"}, {"kind": "app_task", "name": "HELM", "uuid": "beb73c3d-d3fc-48e3-97e9-d38978499053"}], "name": "f33eac3f_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Dashboard", "uuid": "9fe556ea-1015-4db9-ac2e-58bded0ca13f"}, "edge_type": "user_defined", "type": "", "uuid": "7f16d70c-9995-4ede-a41f-d43d769f6092", "to_task_reference": {"kind": "app_task", "name": "HELM", "uuid": "beb73c3d-d3fc-48e3-97e9-d38978499053"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "b1bb099d-df2c-4a05-bf57-205980756d5f"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Dashboard", "state": "NOT_VALIDATED", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          # Create on-disk volume to store exec logs\n        - mountPath: /tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | sudo tee /etc/kubernetes/addons/dashboard/kubernetes-dashboard.yaml\nkubectl create -f /etc/kubernetes/addons/dashboard/kubernetes-dashboard.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "9fe556ea-1015-4db9-ac2e-58bded0ca13f"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "HELM", "state": "NOT_VALIDATED", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\nsudo mkdir /etc/kubernetes/addons/helm\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | sudo tee /etc/kubernetes/addons/helm/helm.yaml\n\nkubectl create -f /etc/kubernetes/addons/helm/helm.yaml\nhelm init --service-account helm\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "beb73c3d-d3fc-48e3-97e9-d38978499053"}], "description": "", "name": "a9639da1_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "f33eac3f_dag", "uuid": "b1bb099d-df2c-4a05-bf57-205980756d5f"}, "message_list": [], "variable_list": [], "uuid": "3d368dde-d69c-453d-a94a-27b4e01be187"}, "message_list": [], "name": "action_create"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "fcf8cba0-540f-4611-ba30-9bb1a825a7a8", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "62a92d34_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "a020010a-aff2-4cac-8e67-1c87f78bb455"}], "description": "", "name": "8c4aa276_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "62a92d34_dag", "uuid": "a020010a-aff2-4cac-8e67-1c87f78bb455"}, "message_list": [], "variable_list": [], "uuid": "61169cf0-b034-42a4-9d82-e978cd3cf085"}, "message_list": [], "name": "action_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "7d329b81-a27a-4a59-a3aa-249c1ce2c3de", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start", "uuid": "6b6d712c-5196-4bd2-b18b-723d61b6f785"}], "name": "334b4484_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "2c4173a7-8e5d-4350-9ea1-61f9c5680110"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Start", "state": "NOT_VALIDATED", "attrs": {"script": "#!/bin/bash\nset -ex\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "6b6d712c-5196-4bd2-b18b-723d61b6f785"}], "description": "", "name": "daee30ae_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "334b4484_dag", "uuid": "2c4173a7-8e5d-4350-9ea1-61f9c5680110"}, "message_list": [], "variable_list": [], "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "6f1e3833-350f-4918-bfab-f1661e958624", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "9713c3d0_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "7c3b2a0a-b6ea-4f66-9856-4ad78ee4cbaf"}], "description": "", "name": "6407a345_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "9713c3d0_dag", "uuid": "7c3b2a0a-b6ea-4f66-9856-4ad78ee4cbaf"}, "message_list": [], "variable_list": [], "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}, "message_list": [], "name": "action_stop"}, {"description": "System action for restarting an application", "type": "system", "uuid": "b776c808-74c7-451e-82a6-073c7f5e0c0a", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "414912df_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "a8a8c168-d2fc-4a1e-8dc0-20123d5a4307"}], "description": "", "name": "d5c8316f_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "414912df_dag", "uuid": "a8a8c168-d2fc-4a1e-8dc0-20123d5a4307"}, "message_list": [], "variable_list": [], "uuid": "e46d02c0-cdda-467f-9e75-990238e6838f"}, "message_list": [], "name": "action_restart"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "da715e71-b30e-4d4f-876d-2dd1df77990c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Service_Element_Delete_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "1a23eba9-3d9d-48fa-aa99-e2e7def81ac7"}], "name": "SYS_GEN__DAG_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "69bc370d-d68b-47ad-a666-bf3dce7cd873"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Service_Element_Delete_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "1a23eba9-3d9d-48fa-aa99-e2e7def81ac7"}], "description": "", "name": "SYS_GEN__Runbook_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "69bc370d-d68b-47ad-a666-bf3dce7cd873"}, "message_list": [], "variable_list": [], "uuid": "33b4ef38-57c7-492a-8f45-bb91606ad36a"}, "message_list": [], "name": "action_soft_delete"}], "depends_on_list": [], "name": "Kubernetes_Master", "state": "ACTIVE", "port_list": [], "editables": {}, "tier": "", "message_list": [], "variable_list": [], "description": ""}, {"singleton": false, "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "43b90ac7-d750-4657-9686-574410d5a79e", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "4af7c45f_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "6a605bff-a5d5-4b02-9d59-5f4812f2a366"}], "description": "", "name": "7c6e4932_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "4af7c45f_dag", "uuid": "6a605bff-a5d5-4b02-9d59-5f4812f2a366"}, "message_list": [], "variable_list": [], "uuid": "40fa74a0-f7c1-4ec7-bf42-137661b83184"}, "message_list": [], "name": "action_create"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "652ca4c4-b8ae-43ef-9296-d33f66f8b325", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "1e2c50bb_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "842a1ffd-436d-4153-b898-46238d509af4"}], "description": "", "name": "1d794193_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "1e2c50bb_dag", "uuid": "842a1ffd-436d-4153-b898-46238d509af4"}, "message_list": [], "variable_list": [], "uuid": "64f8d8db-a2e5-4b8b-93e6-3f8ca1f28a11"}, "message_list": [], "name": "action_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "1537e202-79ea-4c1e-9a19-e8c4561d7499", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start", "uuid": "ed475a17-6b6e-4533-94e2-c336c35adc46"}], "name": "970128c7_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "aed1a75c-1569-4e74-adf1-d756b56807d7"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Start", "state": "NOT_VALIDATED", "attrs": {"script": "#!/bin/bash\nset -ex\n\nsudo systemctl start docker kubelet\nsudo systemctl enable docker kubelet", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "ed475a17-6b6e-4533-94e2-c336c35adc46"}], "description": "", "name": "884352cf_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "970128c7_dag", "uuid": "aed1a75c-1569-4e74-adf1-d756b56807d7"}, "message_list": [], "variable_list": [], "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "caac5172-91d0-4faa-b715-fe1f45cb36f5", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "6c01dc28_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "3904f27d-2298-4ec6-bcc5-febcbcaaba34"}], "description": "", "name": "0cb172a7_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "6c01dc28_dag", "uuid": "3904f27d-2298-4ec6-bcc5-febcbcaaba34"}, "message_list": [], "variable_list": [], "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}, "message_list": [], "name": "action_stop"}, {"description": "System action for restarting an application", "type": "system", "uuid": "974ee451-e1d2-4049-ac6e-d958341a5452", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "1d66b5be_dag", "state": "NOT_VALIDATED", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "e976b76a-bd4c-4412-9329-4a00cd5962cc"}], "description": "", "name": "3a6f587d_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "1d66b5be_dag", "uuid": "e976b76a-bd4c-4412-9329-4a00cd5962cc"}, "message_list": [], "variable_list": [], "uuid": "fc0fd49c-f9e5-4b52-a6b7-056253d9228f"}, "message_list": [], "name": "action_restart"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "eb3dfe52-7265-4568-acc0-27ffe1ecadb9", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Service_Element_Delete_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "6fd78bbb-21ef-47a9-96d2-ca406474a0ac"}], "name": "SYS_GEN__DAG_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f220df96-a53f-46d3-8f32-1a2ac004df35"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Service_Element_Delete_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "6fd78bbb-21ef-47a9-96d2-ca406474a0ac"}], "description": "", "name": "SYS_GEN__Runbook_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "f220df96-a53f-46d3-8f32-1a2ac004df35"}, "message_list": [], "variable_list": [], "uuid": "7283449d-70a5-4258-8989-510926d97bb1"}, "message_list": [], "name": "action_soft_delete"}], "depends_on_list": [], "name": "Kubernetes_Minion", "state": "ACTIVE", "port_list": [], "editables": {}, "tier": "", "message_list": [], "variable_list": [], "description": ""}], "substrate_definition_list": [{"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "f087adfb-c9bd-4bf2-bf63-78f62ffd072b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "01c8e819-8bb1-41fd-b4ba-689117240ac9"}, {"kind": "app_task", "name": "SYS_GEN__check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "68b901b6-921d-4ba8-9d67-7ea9b98b70c4"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "01c8e819-8bb1-41fd-b4ba-689117240ac9"}, "edge_type": "inherent", "type": "", "uuid": "dc234cca-9e15-483b-9539-b6516aa9a82b", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "68b901b6-921d-4ba8-9d67-7ea9b98b70c4"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "b615c15b-ba1a-4b25-baad-b6f543baec74"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Provision_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"name": "K8SC-@@{calm_array_index}@@-@@{calm_time}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}, "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "categories": ""}, "timeout_secs": "0", "type": "PROVISION_NUTANIX", "variable_list": [], "uuid": "01c8e819-8bb1-41fd-b4ba-689117240ac9"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "68b901b6-921d-4ba8-9d67-7ea9b98b70c4"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "b615c15b-ba1a-4b25-baad-b6f543baec74"}, "message_list": [], "variable_list": [], "uuid": "98e4314d-8b0e-4c1f-bc3c-d540cc7559df"}, "message_list": [], "name": "action_create"}, {"description": "System action for powering on an application", "type": "system", "uuid": "e78c3c88-e428-4ce1-b2e7-6b1feaf1dfe4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "bc47b659-c946-487d-b1eb-6978b6f627a6"}, {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "b07dc58f-4071-4195-8669-4608e99932d0"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "bc47b659-c946-487d-b1eb-6978b6f627a6"}, "edge_type": "inherent", "type": "", "uuid": "fd147afb-c801-400b-acc0-a496e2ad11cb", "to_task_reference": {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "b07dc58f-4071-4195-8669-4608e99932d0"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f2a65a14-bc6b-4f68-aa63-892d33791a98"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOn_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "bc47b659-c946-487d-b1eb-6978b6f627a6"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "b07dc58f-4071-4195-8669-4608e99932d0"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "f2a65a14-bc6b-4f68-aa63-892d33791a98"}, "message_list": [], "variable_list": [], "uuid": "b9d948dc-bc68-4f82-ba2c-f744b5ec23fe"}, "message_list": [], "name": "action_poweron"}, {"description": "System action for restarting an application", "type": "system", "uuid": "f89a74dd-6d1c-4f8c-b7c7-eef597523421", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_Restart_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "c532fbc6-39a0-41fd-ae92-0c914ec3a02e"}, {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "2fc90ff9-9d8f-424e-aaab-43088da77204"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_Restart_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "c532fbc6-39a0-41fd-ae92-0c914ec3a02e"}, "edge_type": "inherent", "type": "", "uuid": "f90d5f7b-b8a5-4bae-841b-447c1dc24b13", "to_task_reference": {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "2fc90ff9-9d8f-424e-aaab-43088da77204"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "c110f2b6-3e6a-4576-90c7-baf060fb18e3"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_Restart_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "c532fbc6-39a0-41fd-ae92-0c914ec3a02e"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_AHV_Centos_K8SC_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "2fc90ff9-9d8f-424e-aaab-43088da77204"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "c110f2b6-3e6a-4576-90c7-baf060fb18e3"}, "message_list": [], "variable_list": [], "uuid": "29570f57-14c7-42f4-b2fb-2bd661d45236"}, "message_list": [], "name": "action_restart"}, {"description": "System action for suspending an application", "type": "system", "uuid": "1768158e-a29a-4bfa-ab64-1391d8f441b3", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "dfdfce2a-9927-43ff-bbf8-0dda96f22736"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "dfdfce2a-9927-43ff-bbf8-0dda96f22736"}, "message_list": [], "variable_list": [], "uuid": "eb2f9b5d-150d-41ed-92fe-f5ea8b50c8dd"}, "message_list": [], "name": "action_suspend"}, {"description": "System action for modifying an application", "type": "system", "uuid": "4c7c23df-2707-4c86-ab13-248727b95fd8", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "ce90007c-1425-4ce4-8f38-b7ecbb36160e"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "ce90007c-1425-4ce4-8f38-b7ecbb36160e"}, "message_list": [], "variable_list": [], "uuid": "33231adb-8b80-44e9-880c-89c4730d8fa1"}, "message_list": [], "name": "action_modify"}, {"description": "System action for powering off an application", "type": "system", "uuid": "f785c985-22ae-43b1-9fd5-8c98a7f13d1a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOff_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9b5305e8-1f36-41e8-8741-ace8f08ce617"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "729891fa-a837-4319-a666-473fe9d65517"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOff_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "9b5305e8-1f36-41e8-8741-ace8f08ce617"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "729891fa-a837-4319-a666-473fe9d65517"}, "message_list": [], "variable_list": [], "uuid": "19fff8bf-4117-4a3e-b581-a66833f3acde"}, "message_list": [], "name": "action_poweroff"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "57b8f661-7a5a-4de6-895e-065f20e52e17", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Delete_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "2198c9d0-8d42-4be9-b565-3c2ae6080460"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "1d0d0b20-4c5d-4031-94bb-b5389aed2b37"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Delete_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_NUTANIX", "variable_list": [], "uuid": "2198c9d0-8d42-4be9-b565-3c2ae6080460"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "1d0d0b20-4c5d-4031-94bb-b5389aed2b37"}, "message_list": [], "variable_list": [], "uuid": "1ebb904d-2ec0-4639-9ffc-b20be9b31a07"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "536ec3b6-af55-465f-b10d-b084f98c808b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Substrate_Element_Delete_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "dc715f13-8c02-481b-abf2-cb6b5a5b1f04"}], "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "142dda5c-8da3-4d1b-8d31-4f43b8369ec8"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Substrate_Element_Delete_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "dc715f13-8c02-481b-abf2-cb6b5a5b1f04"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "142dda5c-8da3-4d1b-8d31-4f43b8369ec8"}, "message_list": [], "variable_list": [], "uuid": "8b49c08f-eece-4c81-a233-b407246669f3"}, "message_list": [], "name": "action_soft_delete"}], "type": "AHV_VM", "name": "AHV_Centos_K8SC", "state": "ACTIVE", "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "message_list": [], "create_spec": {"name": "K8SC-@@{calm_array_index}@@-@@{calm_time}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}, "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "categories": ""}, "variable_list": [], "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, {"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "3e70dc2e-b5ac-4fdb-a993-2f9ec03030e3", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "e81c704b-3d52-4f3f-8402-da558fcb2db9"}, {"kind": "app_task", "name": "SYS_GEN__check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b4c85463-d628-44b9-8916-816c3c0d7a93"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "e81c704b-3d52-4f3f-8402-da558fcb2db9"}, "edge_type": "inherent", "type": "", "uuid": "46287c8e-6e0c-4450-b60c-e218ec974b15", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b4c85463-d628-44b9-8916-816c3c0d7a93"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "63bb1d13-7045-4f7f-8a11-474a4d57ade3"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Provision_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"name": "K8SM-@@{calm_array_index}@@-@@{calm_time}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 4, "gpu_list": [], "memory_size_mib": 4096, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}, "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "categories": ""}, "timeout_secs": "0", "type": "PROVISION_NUTANIX", "variable_list": [], "uuid": "e81c704b-3d52-4f3f-8402-da558fcb2db9"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "b4c85463-d628-44b9-8916-816c3c0d7a93"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "63bb1d13-7045-4f7f-8a11-474a4d57ade3"}, "message_list": [], "variable_list": [], "uuid": "e7fe5b86-088f-4d41-a97f-22a671ca9e28"}, "message_list": [], "name": "action_create"}, {"description": "System action for powering on an application", "type": "system", "uuid": "eaf994eb-edc4-4a6e-8d2b-71fbdbb5c19b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ae7257a7-85cf-418f-b4ec-28515774fd34"}, {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "289b8b96-77d7-455c-8094-1dc2c0dda1f7"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ae7257a7-85cf-418f-b4ec-28515774fd34"}, "edge_type": "inherent", "type": "", "uuid": "1ea3c5a4-2207-483c-9eb0-eb73a85638d3", "to_task_reference": {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "289b8b96-77d7-455c-8094-1dc2c0dda1f7"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "e7cf0842-cd89-4fd2-aced-c9abea12f78b"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOn_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "ae7257a7-85cf-418f-b4ec-28515774fd34"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "289b8b96-77d7-455c-8094-1dc2c0dda1f7"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "e7cf0842-cd89-4fd2-aced-c9abea12f78b"}, "message_list": [], "variable_list": [], "uuid": "3a635c28-eef3-46d9-b46b-f04e740188bd"}, "message_list": [], "name": "action_poweron"}, {"description": "System action for restarting an application", "type": "system", "uuid": "ad0594ff-4de9-4313-a52a-96694b6f83a2", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_Restart_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "622dbdba-acc9-4325-85f0-667992e36b76"}, {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "241fd2a9-1b94-4006-9cae-eb98e662ca43"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_Restart_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "622dbdba-acc9-4325-85f0-667992e36b76"}, "edge_type": "inherent", "type": "", "uuid": "2c0ad461-e108-4ffb-b103-2f7f4b1e7885", "to_task_reference": {"kind": "app_task", "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "241fd2a9-1b94-4006-9cae-eb98e662ca43"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "76432271-0345-4632-be90-b1495c6066eb"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_Restart_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "622dbdba-acc9-4325-85f0-667992e36b76"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_AHV_Centos_K8SM_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "0", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "241fd2a9-1b94-4006-9cae-eb98e662ca43"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "76432271-0345-4632-be90-b1495c6066eb"}, "message_list": [], "variable_list": [], "uuid": "35d28241-bfa8-4d35-bee9-912690d2fec5"}, "message_list": [], "name": "action_restart"}, {"description": "System action for suspending an application", "type": "system", "uuid": "dd31b293-c9c2-4a56-a099-332b75d85806", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "068f4cb2-b3aa-44f5-bd80-02262ee9250d"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "068f4cb2-b3aa-44f5-bd80-02262ee9250d"}, "message_list": [], "variable_list": [], "uuid": "cf9ec1fc-6321-4995-8ea6-4743282d58a3"}, "message_list": [], "name": "action_suspend"}, {"description": "System action for modifying an application", "type": "system", "uuid": "d09bb339-d8dc-424b-b164-59558d137cda", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "8ec7d5bf-5e54-4dc0-aac5-d1a466aa5b0a"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "8ec7d5bf-5e54-4dc0-aac5-d1a466aa5b0a"}, "message_list": [], "variable_list": [], "uuid": "4bc1948a-c275-4bea-8ce1-921c8e4f3b5b"}, "message_list": [], "name": "action_modify"}, {"description": "System action for powering off an application", "type": "system", "uuid": "a825b052-91a0-4566-a1d3-04d7133755d8", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOff_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "246b53da-b82b-41d2-90e8-8d5005cd8faf"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "95a64621-4ae9-47f5-874b-f6899b725666"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOff_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "0", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "246b53da-b82b-41d2-90e8-8d5005cd8faf"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "95a64621-4ae9-47f5-874b-f6899b725666"}, "message_list": [], "variable_list": [], "uuid": "712488a1-852e-4181-9556-40cac689cd3a"}, "message_list": [], "name": "action_poweroff"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "bfeb0b96-dd89-4154-9bc4-8daee47b4f0a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Delete_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "3ed7b2c2-6304-42ac-bbbb-a5685929a7b1"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "4591fbfe-093c-423f-89ac-4642cf104503"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Delete_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_NUTANIX", "variable_list": [], "uuid": "3ed7b2c2-6304-42ac-bbbb-a5685929a7b1"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "4591fbfe-093c-423f-89ac-4642cf104503"}, "message_list": [], "variable_list": [], "uuid": "b6951360-e78d-4824-bdfd-f2db95b36b54"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "dcd798df-f5c8-4ee2-b9e1-9a157ed6ee0e", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Substrate_Element_Delete_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "8804d61f-aacf-45a4-8f3d-0554998d4a4b"}], "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "9bb16760-4879-4d52-8025-06b35d3f2a1d"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Substrate_Element_Delete_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "8804d61f-aacf-45a4-8f3d-0554998d4a4b"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "9bb16760-4879-4d52-8025-06b35d3f2a1d"}, "message_list": [], "variable_list": [], "uuid": "c8c91f3d-8bb9-461d-a2eb-d2ff75f4bc1d"}, "message_list": [], "name": "action_soft_delete"}], "type": "AHV_VM", "name": "AHV_Centos_K8SM", "state": "ACTIVE", "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "message_list": [], "create_spec": {"name": "K8SM-@@{calm_array_index}@@-@@{calm_time}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 4, "gpu_list": [], "memory_size_mib": 4096, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}, "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "categories": ""}, "variable_list": [], "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}], "credential_definition_list": [{"username": "centos", "description": "", "secret": {"attrs": {"is_secret_modified": false, "secret_reference": {}}}, "name": "CENTOS", "state": "ACTIVE", "editables": {"username": true, "secret": true}, "type": "KEY", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}], "package_definition_list": [{"description": "", "action_list": [{"description": "System action for installing an application", "type": "system", "uuid": "743f977c-b280-4545-8e2d-b14f9b6f405b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Install_Crb_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "44ec95b9-5a60-4c7f-9932-da41f2dbfb9d"}], "name": "SYS_GEN__DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "5745e7fb-8e1b-4edf-8cc4-6ff90cb2a301"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Install_Crb_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "name": "dac441af_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, "edge_type": "user_defined", "type": "", "uuid": "2fd50bff-3360-4277-848f-fb88240bd1d3", "to_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}}, {"from_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, "edge_type": "user_defined", "type": "", "uuid": "6c48ef31-988e-4989-bb59-4a6d0872153e", "to_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}}, {"from_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, "edge_type": "user_defined", "type": "", "uuid": "50f81aba-ba9d-4d2d-888f-79be19283d83", "to_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}}, {"from_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, "edge_type": "user_defined", "type": "", "uuid": "468ff76c-0d69-4b6e-a40a-f567c33f4345", "to_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}}, {"from_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, "edge_type": "user_defined", "type": "", "uuid": "519dc03d-35c8-4a36-83ac-6c241b79d459", "to_task_reference": {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, "edge_type": "user_defined", "type": "", "uuid": "9c52050c-3e09-46f7-a82f-953e552f4ec4", "to_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}}, {"from_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, "edge_type": "user_defined", "type": "", "uuid": "b5cba3cc-2e61-4d7f-8b05-e365fd40ce9d", "to_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\n#global proxy settings\necho \"http_proxy=${HTTP_PROXY}\nhttps_proxy=${HTTPS_PROXY}\nno_proxy=${NO_PROXY}\" | sudo tee --append /etc/environment\nfi\n\nsudo easy_install netaddr\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo rm /etc/environment\nfi\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "ETCD Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\n# sudo easy_install netaddr\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \n#wget -q \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/etcd.service\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\n# wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n# wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n# wget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.1-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm /usr/local/bin/\nrm -rf helm-v2.8.1-linux-amd64.tar.gz linux-amd64", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Generate Certs", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Configure Services", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Add User Roles", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nCOUNT=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/proxy\n      - nodes/stats\n      - nodes/log\n      - nodes/spec\n      - nodes/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Network Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nexport PATH=$PATH:/opt/bin\nsudo mkdir -p /etc/kubernetes/addons/flannel\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee /etc/kubernetes/addons/flannel/kube-flannel.yml\nkubectl create -f /etc/kubernetes/addons/flannel/kube-flannel.yml\nsleep 15\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "DNS Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments/scale\", \"replicasets/scale\"]\n    verbs: [\"get\", \"update\"]\n# Remove the configmaps rule once below issue is fixed:\n# kubernetes-incubator/cluster-proportional-autoscaler#16\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - /cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          # Should keep target in sync with cluster/addons/dns/kube-dns.yaml.base\n          - --target=Deployment/kube-dns\n          # When cluster is using large nodes(with more cores), \"coresPerReplica\" should dominate.\n          # If using small nodes, \"nodesPerReplica\" should dominate.\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns.yaml\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "NVP Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io/is-default-class: \"true\"\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | sudo tee -a /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "description": "", "name": "8e760b73_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "dac441af_dag", "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, "message_list": [], "variable_list": [], "uuid": "43ddf706-fe83-4515-8b4f-c94e8bf47363"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "6324786a_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}], "description": "", "name": "6522ac7a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "6324786a_dag", "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}, "message_list": [], "variable_list": [], "uuid": "d91e6632-7f9a-40ac-a89a-c89ade1d9072"}}, "timeout_secs": "0", "type": "CUSTOM_PACKAGE_INSTALL", "variable_list": [], "uuid": "44ec95b9-5a60-4c7f-9932-da41f2dbfb9d"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "5745e7fb-8e1b-4edf-8cc4-6ff90cb2a301"}, "message_list": [], "variable_list": [], "uuid": "03716932-7b1d-4f49-b96b-1ba37475339a"}, "message_list": [], "name": "action_install"}, {"description": "System action for creating an application", "type": "system", "uuid": "20c16708-1cb8-4a2e-8cd4-ee3314f0e7c2", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "eb34cddf-4765-40c5-8376-9f467bac7e03"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "9f68cac6-89cd-453e-9e5a-47f1ddc442e8"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "789248ea-cc40-4708-8066-91c074c7c985"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "9f68cac6-89cd-453e-9e5a-47f1ddc442e8"}, "edge_type": "inherent", "type": "", "uuid": "7f8a3f5f-5ec3-4145-bcdf-315373d1f716", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "789248ea-cc40-4708-8066-91c074c7c985"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "eb34cddf-4765-40c5-8376-9f467bac7e03"}, "edge_type": "inherent", "type": "", "uuid": "bc9bd50d-3bd1-45b8-a182-4810b30b8275", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "9f68cac6-89cd-453e-9e5a-47f1ddc442e8"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "1443ec6a-8168-4f95-a2bc-10ccf73312bb"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "03716932-7b1d-4f49-b96b-1ba37475339a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "eb34cddf-4765-40c5-8376-9f467bac7e03"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "a9639da1_runbook", "uuid": "3d368dde-d69c-453d-a94a-27b4e01be187"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "9f68cac6-89cd-453e-9e5a-47f1ddc442e8"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "789248ea-cc40-4708-8066-91c074c7c985"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "1443ec6a-8168-4f95-a2bc-10ccf73312bb"}, "message_list": [], "variable_list": [], "uuid": "c17f86b3-fff4-47fe-91eb-bd0334afcbf3"}, "message_list": [], "name": "action_create"}, {"description": "System action for uninstalling an application", "type": "system", "uuid": "a50815f7-4470-4d8c-8d10-3a22cf040434", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Uninstall_Crb_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "26f60e4f-4c38-41d4-b477-f0865aa8def9"}], "name": "SYS_GEN__DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "a78813f3-2e7b-49fc-86e9-9abd651f30b4"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Uninstall_Crb_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "name": "dac441af_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, "edge_type": "user_defined", "type": "", "uuid": "2fd50bff-3360-4277-848f-fb88240bd1d3", "to_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}}, {"from_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, "edge_type": "user_defined", "type": "", "uuid": "6c48ef31-988e-4989-bb59-4a6d0872153e", "to_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}}, {"from_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, "edge_type": "user_defined", "type": "", "uuid": "50f81aba-ba9d-4d2d-888f-79be19283d83", "to_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}}, {"from_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, "edge_type": "user_defined", "type": "", "uuid": "468ff76c-0d69-4b6e-a40a-f567c33f4345", "to_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}}, {"from_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, "edge_type": "user_defined", "type": "", "uuid": "519dc03d-35c8-4a36-83ac-6c241b79d459", "to_task_reference": {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, "edge_type": "user_defined", "type": "", "uuid": "9c52050c-3e09-46f7-a82f-953e552f4ec4", "to_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}}, {"from_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, "edge_type": "user_defined", "type": "", "uuid": "b5cba3cc-2e61-4d7f-8b05-e365fd40ce9d", "to_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\n#global proxy settings\necho \"http_proxy=${HTTP_PROXY}\nhttps_proxy=${HTTPS_PROXY}\nno_proxy=${NO_PROXY}\" | sudo tee --append /etc/environment\nfi\n\nsudo easy_install netaddr\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo rm /etc/environment\nfi\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "ETCD Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\n# sudo easy_install netaddr\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \n#wget -q \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/etcd.service\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\n# wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n# wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n# wget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.1-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm /usr/local/bin/\nrm -rf helm-v2.8.1-linux-amd64.tar.gz linux-amd64", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Generate Certs", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Configure Services", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Add User Roles", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nCOUNT=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/proxy\n      - nodes/stats\n      - nodes/log\n      - nodes/spec\n      - nodes/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Network Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nexport PATH=$PATH:/opt/bin\nsudo mkdir -p /etc/kubernetes/addons/flannel\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee /etc/kubernetes/addons/flannel/kube-flannel.yml\nkubectl create -f /etc/kubernetes/addons/flannel/kube-flannel.yml\nsleep 15\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "DNS Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments/scale\", \"replicasets/scale\"]\n    verbs: [\"get\", \"update\"]\n# Remove the configmaps rule once below issue is fixed:\n# kubernetes-incubator/cluster-proportional-autoscaler#16\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - /cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          # Should keep target in sync with cluster/addons/dns/kube-dns.yaml.base\n          - --target=Deployment/kube-dns\n          # When cluster is using large nodes(with more cores), \"coresPerReplica\" should dominate.\n          # If using small nodes, \"nodesPerReplica\" should dominate.\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns.yaml\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "NVP Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io/is-default-class: \"true\"\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | sudo tee -a /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "description": "", "name": "8e760b73_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "dac441af_dag", "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, "message_list": [], "variable_list": [], "uuid": "43ddf706-fe83-4515-8b4f-c94e8bf47363"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "6324786a_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}], "description": "", "name": "6522ac7a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "6324786a_dag", "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}, "message_list": [], "variable_list": [], "uuid": "d91e6632-7f9a-40ac-a89a-c89ade1d9072"}}, "timeout_secs": "0", "type": "CUSTOM_PACKAGE_UNINSTALL", "variable_list": [], "uuid": "26f60e4f-4c38-41d4-b477-f0865aa8def9"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "a78813f3-2e7b-49fc-86e9-9abd651f30b4"}, "message_list": [], "variable_list": [], "uuid": "02695c22-fc1e-4d31-8e02-2767a7e8526f"}, "message_list": [], "name": "action_uninstall"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "c756c241-500e-4204-ac2d-60f3ffaaa7b6", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "cd80e6ff-02fc-4064-aee9-313fcd37ae2c"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "82ae1f77-f968-4675-8d7e-582bb27ddfe0"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "981ade36-dbb7-41ce-93fb-33c22a28cb20"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "cd80e6ff-02fc-4064-aee9-313fcd37ae2c"}, "edge_type": "inherent", "type": "", "uuid": "a69b685e-6211-43ba-9b6b-29ea7c46b446", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "82ae1f77-f968-4675-8d7e-582bb27ddfe0"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "82ae1f77-f968-4675-8d7e-582bb27ddfe0"}, "edge_type": "inherent", "type": "", "uuid": "95ecb5a4-5b7c-429c-8cef-5d0ba05bd1e8", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "981ade36-dbb7-41ce-93fb-33c22a28cb20"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "c0a8e8ec-34fc-4164-b20e-cb02b2d26264"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "cd80e6ff-02fc-4064-aee9-313fcd37ae2c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "8c4aa276_runbook", "uuid": "61169cf0-b034-42a4-9d82-e978cd3cf085"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "82ae1f77-f968-4675-8d7e-582bb27ddfe0"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "02695c22-fc1e-4d31-8e02-2767a7e8526f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "981ade36-dbb7-41ce-93fb-33c22a28cb20"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "c0a8e8ec-34fc-4164-b20e-cb02b2d26264"}, "message_list": [], "variable_list": [], "uuid": "4e824bb6-235a-49a1-87b7-05d57825a582"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "8a6e8e7e-540b-44fc-b952-88fd722f7071", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "169c7693-5630-4a58-b0cf-8ce3d9799f85"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "28802439-4633-4999-925e-c9c3841096c8"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "169c7693-5630-4a58-b0cf-8ce3d9799f85"}, "edge_type": "inherent", "type": "", "uuid": "2cf4b44b-9c59-47ae-be71-c7c62b51de36", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "28802439-4633-4999-925e-c9c3841096c8"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "978a37fb-6d13-4f21-8011-2d5f1f62d270"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "33b4ef38-57c7-492a-8f45-bb91606ad36a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "169c7693-5630-4a58-b0cf-8ce3d9799f85"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "28802439-4633-4999-925e-c9c3841096c8"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "978a37fb-6d13-4f21-8011-2d5f1f62d270"}, "message_list": [], "variable_list": [], "uuid": "a8a9d13e-b797-45a1-9d44-3638260464fb"}, "message_list": [], "name": "action_soft_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "f84b7c6e-c470-4395-ba87-7843731671c4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "c49f9d1b-d2e1-439d-bb37-103bcc0bfc0f"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "62635fd9-febb-4956-9623-3dacc10a8481"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "c49f9d1b-d2e1-439d-bb37-103bcc0bfc0f"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "62635fd9-febb-4956-9623-3dacc10a8481"}, "message_list": [], "variable_list": [], "uuid": "94021817-e0a0-4212-baaa-9adea704e280"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "321d0cd8-cf55-422a-bd65-de935f847c0e", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "609a1ec8-c98e-4169-82be-b70d59c1c3f3"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f4cf5d54-b20e-4aad-ac0e-6b6dee362020"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "d5c8316f_runbook", "uuid": "e46d02c0-cdda-467f-9e75-990238e6838f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "609a1ec8-c98e-4169-82be-b70d59c1c3f3"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "f4cf5d54-b20e-4aad-ac0e-6b6dee362020"}, "message_list": [], "variable_list": [], "uuid": "92e229fc-c192-4ecc-b53b-b6c25a0d7ea2"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "31139ea2-804e-4fa7-8e1a-4124082869a1", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "a1e584f5-d2b1-4601-ae8a-fc02d4d7610a"}], "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "85ace97b-2f08-405c-afc8-e27cd6aca8cb"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a1e584f5-d2b1-4601-ae8a-fc02d4d7610a"}], "description": "", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "85ace97b-2f08-405c-afc8-e27cd6aca8cb"}, "message_list": [], "variable_list": [], "uuid": "725a48bb-42ff-45fc-b501-6e79c255c2c2"}, "message_list": [], "name": "action_stop"}], "type": "DEB", "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}], "name": "AHV_Centos_K8SC_Package", "state": "ACTIVE", "version": "", "editables": {}, "message_list": [], "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "name": "dac441af_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, "edge_type": "user_defined", "type": "", "uuid": "2fd50bff-3360-4277-848f-fb88240bd1d3", "to_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}}, {"from_task_reference": {"kind": "app_task", "name": "Configure Services", "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, "edge_type": "user_defined", "type": "", "uuid": "6c48ef31-988e-4989-bb59-4a6d0872153e", "to_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}}, {"from_task_reference": {"kind": "app_task", "name": "Add User Roles", "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, "edge_type": "user_defined", "type": "", "uuid": "50f81aba-ba9d-4d2d-888f-79be19283d83", "to_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}}, {"from_task_reference": {"kind": "app_task", "name": "Network Configuration", "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, "edge_type": "user_defined", "type": "", "uuid": "468ff76c-0d69-4b6e-a40a-f567c33f4345", "to_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}}, {"from_task_reference": {"kind": "app_task", "name": "DNS Configuration", "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, "edge_type": "user_defined", "type": "", "uuid": "519dc03d-35c8-4a36-83ac-6c241b79d459", "to_task_reference": {"kind": "app_task", "name": "NVP Configuration", "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, "edge_type": "user_defined", "type": "", "uuid": "9c52050c-3e09-46f7-a82f-953e552f4ec4", "to_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}}, {"from_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install", "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, "edge_type": "user_defined", "type": "", "uuid": "b5cba3cc-2e61-4d7f-8b05-e365fd40ce9d", "to_task_reference": {"kind": "app_task", "name": "Generate Certs", "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\n#global proxy settings\necho \"http_proxy=${HTTP_PROXY}\nhttps_proxy=${HTTPS_PROXY}\nno_proxy=${NO_PROXY}\" | sudo tee --append /etc/environment\nfi\n\nsudo easy_install netaddr\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo rm /etc/environment\nfi\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1fac4b7e-f925-48d5-b714-b5e4c758b718"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "ETCD Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\n# sudo easy_install netaddr\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \n#wget -q \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/etcd.service\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\n# wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n# wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n# wget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.1-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm /usr/local/bin/\nrm -rf helm-v2.8.1-linux-amd64.tar.gz linux-amd64", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d5f745b0-df06-449c-b5f8-2b8e7f714c25"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Generate Certs", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "71a5c1cb-293e-4f45-a028-402f6e4b4aff"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Configure Services", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "b2b00722-4a4e-4664-ba1d-1f1bbc295584"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Add User Roles", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nCOUNT=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/proxy\n      - nodes/stats\n      - nodes/log\n      - nodes/spec\n      - nodes/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "f3c99182-c7af-411c-abd6-0d78f6360b76"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Network Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nexport PATH=$PATH:/opt/bin\nsudo mkdir -p /etc/kubernetes/addons/flannel\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee /etc/kubernetes/addons/flannel/kube-flannel.yml\nkubectl create -f /etc/kubernetes/addons/flannel/kube-flannel.yml\nsleep 15\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "352fa86f-8185-457e-87c1-4a2e31724c39"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "DNS Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments/scale\", \"replicasets/scale\"]\n    verbs: [\"get\", \"update\"]\n# Remove the configmaps rule once below issue is fixed:\n# kubernetes-incubator/cluster-proportional-autoscaler#16\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - /cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          # Should keep target in sync with cluster/addons/dns/kube-dns.yaml.base\n          - --target=Deployment/kube-dns\n          # When cluster is using large nodes(with more cores), \"coresPerReplica\" should dominate.\n          # If using small nodes, \"nodesPerReplica\" should dominate.\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns.yaml\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "af04aec3-1c24-4ef6-b136-727e37a640de"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "NVP Configuration", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io/is-default-class: \"true\"\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | sudo tee -a /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "1a5d7a12-3a1a-4809-a082-ea79aee6282b"}], "description": "", "name": "8e760b73_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "dac441af_dag", "uuid": "0c121693-c52e-45dd-8f0c-bf56324f9904"}, "message_list": [], "variable_list": [], "uuid": "43ddf706-fe83-4515-8b4f-c94e8bf47363"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "6324786a_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}], "description": "", "name": "6522ac7a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "6324786a_dag", "uuid": "4a3f327b-20df-4780-aeef-3f44d5374b7c"}, "message_list": [], "variable_list": [], "uuid": "d91e6632-7f9a-40ac-a89a-c89ade1d9072"}}, "variable_list": [], "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, {"description": "", "action_list": [{"description": "System action for installing an application", "type": "system", "uuid": "0aa83588-347f-4cf8-952f-813d2abd79eb", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Install_Crb_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "650816ed-a61e-494c-b5fc-02b4162fc005"}], "name": "SYS_GEN__DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "7a0c3f34-0c88-4648-821e-8b2556173b19"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Install_Crb_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "name": "c1566b3d_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, "edge_type": "user_defined", "type": "", "uuid": "439609ef-d182-4c01-8886-f5e08beb9024", "to_task_reference": {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, "edge_type": "user_defined", "type": "", "uuid": "92f89303-9672-4d94-8cbf-7af0a9241ad7", "to_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{AHV_Centos_K8SC.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n#wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl /usr/bin/\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\n#while [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\n#sudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\n#sudo chmod +r ${KUBE_CERT_PATH}/*\n\n#sudo systemctl start docker kubelet iscsid\n#sudo systemctl enable docker kubelet iscsid", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "GetCerts", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SC.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"minion@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls /opt/kube-ssl/encryption-config.yaml 2>/dev/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:/opt/kube-ssl/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"minion@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nrm -rf ${instance}-csr.json", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "description": "", "name": "9a6e189b_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "c1566b3d_dag", "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, "message_list": [], "variable_list": [], "uuid": "67af8980-a82f-40eb-b85b-6595d963e1b9"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Remove Node", "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "name": "abd3357c_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Remove Node", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'minion@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'minion@@{calm_array_index}@@'\"", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "description": "", "name": "3cb17acf_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "abd3357c_dag", "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, "message_list": [], "variable_list": [], "uuid": "a35861f1-53b4-49a5-b99e-b59b53f206a0"}}, "timeout_secs": "0", "type": "CUSTOM_PACKAGE_INSTALL", "variable_list": [], "uuid": "650816ed-a61e-494c-b5fc-02b4162fc005"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "7a0c3f34-0c88-4648-821e-8b2556173b19"}, "message_list": [], "variable_list": [], "uuid": "01781f24-512f-4cb8-ae0c-e479cf42db21"}, "message_list": [], "name": "action_install"}, {"description": "System action for creating an application", "type": "system", "uuid": "e07aa043-1bcc-42e2-92d1-69ad25ac86b8", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "1564cc3a-5779-496d-87ff-ddaa54eb03e8"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "4e745d62-4329-452f-aefe-8a5e13e6baa0"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "94e608e2-ccc0-474b-99d6-d7503746e20a"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "4e745d62-4329-452f-aefe-8a5e13e6baa0"}, "edge_type": "inherent", "type": "", "uuid": "f907a05d-4018-44e9-a400-1ab1cdfcc025", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "94e608e2-ccc0-474b-99d6-d7503746e20a"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "1564cc3a-5779-496d-87ff-ddaa54eb03e8"}, "edge_type": "inherent", "type": "", "uuid": "936e4ee5-853e-4577-a50e-aa37d79f11b6", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "4e745d62-4329-452f-aefe-8a5e13e6baa0"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "54af5e7e-b069-4954-beb3-a6f30ed8dc02"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "01781f24-512f-4cb8-ae0c-e479cf42db21"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1564cc3a-5779-496d-87ff-ddaa54eb03e8"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "7c6e4932_runbook", "uuid": "40fa74a0-f7c1-4ec7-bf42-137661b83184"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "4e745d62-4329-452f-aefe-8a5e13e6baa0"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "94e608e2-ccc0-474b-99d6-d7503746e20a"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "54af5e7e-b069-4954-beb3-a6f30ed8dc02"}, "message_list": [], "variable_list": [], "uuid": "069e9059-d25e-4cb5-9a73-ac1594011ee9"}, "message_list": [], "name": "action_create"}, {"description": "System action for uninstalling an application", "type": "system", "uuid": "10730b3a-a0bf-44c1-8201-8544972b247a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Uninstall_Crb_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "18914334-fb73-4361-8c2d-beeb13ea175b"}], "name": "SYS_GEN__DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "ff5ee57b-ae60-43ae-81ce-f4ff5c8432e5"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Uninstall_Crb_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "name": "c1566b3d_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, "edge_type": "user_defined", "type": "", "uuid": "439609ef-d182-4c01-8886-f5e08beb9024", "to_task_reference": {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, "edge_type": "user_defined", "type": "", "uuid": "92f89303-9672-4d94-8cbf-7af0a9241ad7", "to_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{AHV_Centos_K8SC.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n#wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl /usr/bin/\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\n#while [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\n#sudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\n#sudo chmod +r ${KUBE_CERT_PATH}/*\n\n#sudo systemctl start docker kubelet iscsid\n#sudo systemctl enable docker kubelet iscsid", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "GetCerts", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SC.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"minion@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls /opt/kube-ssl/encryption-config.yaml 2>/dev/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:/opt/kube-ssl/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"minion@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nrm -rf ${instance}-csr.json", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "description": "", "name": "9a6e189b_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "c1566b3d_dag", "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, "message_list": [], "variable_list": [], "uuid": "67af8980-a82f-40eb-b85b-6595d963e1b9"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Remove Node", "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "name": "abd3357c_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Remove Node", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'minion@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'minion@@{calm_array_index}@@'\"", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "description": "", "name": "3cb17acf_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "abd3357c_dag", "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, "message_list": [], "variable_list": [], "uuid": "a35861f1-53b4-49a5-b99e-b59b53f206a0"}}, "timeout_secs": "0", "type": "CUSTOM_PACKAGE_UNINSTALL", "variable_list": [], "uuid": "18914334-fb73-4361-8c2d-beeb13ea175b"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "ff5ee57b-ae60-43ae-81ce-f4ff5c8432e5"}, "message_list": [], "variable_list": [], "uuid": "5e799894-f65d-404a-85df-be37655f5cf2"}, "message_list": [], "name": "action_uninstall"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "8fc4ecb2-9f18-498c-9e26-d9f8ebf990ff", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "5663f68d-a929-4ee6-88de-29b8be98d5de"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7be8f62c-d8d2-4740-b098-fa53da02c4f8"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "f1f19877-8b7e-4a07-a616-0de4b0ef06f8"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "5663f68d-a929-4ee6-88de-29b8be98d5de"}, "edge_type": "inherent", "type": "", "uuid": "94da47b3-7fe9-4633-8535-bad09c5a5291", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7be8f62c-d8d2-4740-b098-fa53da02c4f8"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7be8f62c-d8d2-4740-b098-fa53da02c4f8"}, "edge_type": "inherent", "type": "", "uuid": "8468feb7-3667-43d3-a584-0df4a2e5c528", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "f1f19877-8b7e-4a07-a616-0de4b0ef06f8"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "31fcc654-9f05-4864-b1dc-6f774bbce544"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "5663f68d-a929-4ee6-88de-29b8be98d5de"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "1d794193_runbook", "uuid": "64f8d8db-a2e5-4b8b-93e6-3f8ca1f28a11"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7be8f62c-d8d2-4740-b098-fa53da02c4f8"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "5e799894-f65d-404a-85df-be37655f5cf2"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "f1f19877-8b7e-4a07-a616-0de4b0ef06f8"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "31fcc654-9f05-4864-b1dc-6f774bbce544"}, "message_list": [], "variable_list": [], "uuid": "172dfad8-a39e-436b-8e91-71c48af31e87"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "38944caa-cf17-4562-9a67-c9990c899de6", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a2a6bfbc-cdd6-445d-82d2-e10f13bcef35"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "229ba86e-3861-48c3-b2a6-5a26bbedc2d8"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a2a6bfbc-cdd6-445d-82d2-e10f13bcef35"}, "edge_type": "inherent", "type": "", "uuid": "a8c5fe21-b5e6-4d81-957a-9cd0a49a187b", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "229ba86e-3861-48c3-b2a6-5a26bbedc2d8"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "79467a0b-a08b-4642-8016-865b38885f20"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7283449d-70a5-4258-8989-510926d97bb1"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a2a6bfbc-cdd6-445d-82d2-e10f13bcef35"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "229ba86e-3861-48c3-b2a6-5a26bbedc2d8"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "79467a0b-a08b-4642-8016-865b38885f20"}, "message_list": [], "variable_list": [], "uuid": "8ef29c39-198c-4ec9-a477-8a3800854edc"}, "message_list": [], "name": "action_soft_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "42e070fa-1941-49b2-a7d3-69dff095a886", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "4a88d8d4-e9d8-4e6b-84b3-fef0585f7271"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "da2465e1-45ac-4825-ae44-df481e5566b0"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "4a88d8d4-e9d8-4e6b-84b3-fef0585f7271"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "da2465e1-45ac-4825-ae44-df481e5566b0"}, "message_list": [], "variable_list": [], "uuid": "4f736b92-ad25-4804-96b6-c6bf83b5a33a"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "75e68307-c9a2-441e-a1b8-831ff5ea7621", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "1e42ef39-3c07-4961-94db-851e0387e2b5"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "9df0b270-a3bc-422d-8d58-e8e8a7e76252"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "3a6f587d_runbook", "uuid": "fc0fd49c-f9e5-4b52-a6b7-056253d9228f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1e42ef39-3c07-4961-94db-851e0387e2b5"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "9df0b270-a3bc-422d-8d58-e8e8a7e76252"}, "message_list": [], "variable_list": [], "uuid": "1c487404-8188-479e-a3eb-045ce450ec82"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "ed5d4f6c-087b-41f5-85ab-8ebb11ee811d", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "15e6cd9d-dbbd-48d2-892a-4af06221ff76"}], "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "27620cd8-692b-4f3e-b5a0-4b0050c55f9d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "15e6cd9d-dbbd-48d2-892a-4af06221ff76"}], "description": "", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "27620cd8-692b-4f3e-b5a0-4b0050c55f9d"}, "message_list": [], "variable_list": [], "uuid": "50f6584b-fd06-4dd4-99c6-83d93201ba8b"}, "message_list": [], "name": "action_stop"}], "type": "DEB", "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}], "name": "AHV_Centos_K8SM_Package", "state": "ACTIVE", "version": "", "editables": {}, "message_list": [], "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "name": "c1566b3d_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, "edge_type": "user_defined", "type": "", "uuid": "439609ef-d182-4c01-8886-f5e08beb9024", "to_task_reference": {"kind": "app_task", "name": "GetCerts", "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download", "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, "edge_type": "user_defined", "type": "", "uuid": "92f89303-9672-4d94-8cbf-7af0a9241ad7", "to_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install", "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Proxy_Download", "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d113cd4a-f170-41d2-834d-584c1a4654f5"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Docker Kubelet Install", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{AHV_Centos_K8SC.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n#wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl /usr/bin/\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\n#while [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\n#sudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\n#sudo chmod +r ${KUBE_CERT_PATH}/*\n\n#sudo systemctl start docker kubelet iscsid\n#sudo systemctl enable docker kubelet iscsid", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "37d478c1-0e4c-46ab-a14f-f590ffb2da7c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "GetCerts", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SC.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"minion@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls /opt/kube-ssl/encryption-config.yaml 2>/dev/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:/opt/kube-ssl/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"minion@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nrm -rf ${instance}-csr.json", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "90e24424-2018-4c77-b54c-9011d8874aef"}], "description": "", "name": "9a6e189b_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "c1566b3d_dag", "uuid": "121806d1-1274-423e-97bf-78ecb36e940d"}, "message_list": [], "variable_list": [], "uuid": "67af8980-a82f-40eb-b85b-6595d963e1b9"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Remove Node", "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "name": "abd3357c_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Remove Node", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'minion@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'minion@@{calm_array_index}@@'\"", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "d4195920-3c0f-4efa-aa92-3d1b8a72ad76"}], "description": "", "name": "3cb17acf_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "abd3357c_dag", "uuid": "f159b4a5-2f74-416d-9adb-c0981bf44156"}, "message_list": [], "variable_list": [], "uuid": "a35861f1-53b4-49a5-b99e-b59b53f206a0"}}, "variable_list": [], "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, {"description": "", "action_list": [{"description": "System action for installing an application", "type": "system", "uuid": "2bbfb75f-e596-4d2c-85e9-6a1fe7a7d2ee", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Image Fetch task for VM", "uuid": "652d788a-e4a8-4fe0-889f-2359b8e78091"}], "name": "SYS_GEN__DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "6f594d5c-a2bd-48fe-ae91-b602575a7304"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Image Fetch task for VM", "state": "ACTIVE", "attrs": {"type": "", "name": "CENTOS_74", "resources": {"image_type": "DISK_IMAGE", "checksum": {"checksum_algorithm": "", "type": "", "checksum_value": ""}, "source_uri": "http://download.nutanix.com/calm/CentOS-7-x86_64-GenericCloud.qcow2", "version": {"product_version": "", "type": "", "product_name": ""}, "architecture": "X86_64", "type": ""}, "description": ""}, "timeout_secs": "0", "type": "SUBSTRATE_IMAGE_FETCH", "variable_list": [], "uuid": "652d788a-e4a8-4fe0-889f-2359b8e78091"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "6f594d5c-a2bd-48fe-ae91-b602575a7304"}, "message_list": [], "variable_list": [], "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}, "message_list": [], "name": "action_install"}, {"description": "System action for creating an application", "type": "system", "uuid": "6fc386c5-1f64-4bb1-b4da-70799eee27fa", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "6f2bf08c-e1dd-4c9c-bbf2-1dee478cffdf"}], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "8323f2d6-77c0-4ff8-8d3c-2910aeb183e4"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6f2bf08c-e1dd-4c9c-bbf2-1dee478cffdf"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "8323f2d6-77c0-4ff8-8d3c-2910aeb183e4"}, "message_list": [], "variable_list": [], "uuid": "6bef5c2a-a67d-4800-a741-4fd805440909"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "3528b138-c2af-45cf-ae7e-a29a31496ec4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "e51a921c-ce1d-4116-bb0d-94a9502257ee"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "e51a921c-ce1d-4116-bb0d-94a9502257ee"}, "message_list": [], "variable_list": [], "uuid": "a9398fe2-9e86-46d6-a109-07ba1e607a51"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "82c10030-d3ad-4bdd-8bfe-053ba99ac685", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f3ee5157-1d19-4ccb-ab5e-ad0715b4d9d5"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "f3ee5157-1d19-4ccb-ab5e-ad0715b4d9d5"}, "message_list": [], "variable_list": [], "uuid": "81904e6e-2f38-4a85-8551-1a63e8c2f13d"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "b8047d87-bed6-431a-90bb-5f671a6ff9c1", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "7b59e002-bce9-4d50-a3fa-ca0d0c915b5c"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "7b59e002-bce9-4d50-a3fa-ca0d0c915b5c"}, "message_list": [], "variable_list": [], "uuid": "c0cbdff8-5d6d-4a3d-9eb3-c60185691e2e"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "6aff1ed8-02ac-4d9f-88b1-097b0d1be486", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "82a8ca72-f53b-4940-8ab8-8393cdbd41c0"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "82a8ca72-f53b-4940-8ab8-8393cdbd41c0"}, "message_list": [], "variable_list": [], "uuid": "beeab0ec-2d9c-4bd5-a552-26ac50e363b6"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "806d730e-05fd-4405-b890-e736fd835014", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "8f64ff79-5f31-45bb-b8b8-d72ff2cfc3d2"}], "description": "", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "8f64ff79-5f31-45bb-b8b8-d72ff2cfc3d2"}, "message_list": [], "variable_list": [], "uuid": "9ab4574e-14c7-413a-b83f-6aa45311bf5b"}, "message_list": [], "name": "action_soft_delete"}], "type": "SUBSTRATE_IMAGE", "service_local_reference_list": [], "name": "CENTOS_74", "state": "ACTIVE", "version": "", "editables": {}, "message_list": [], "options": {"type": "", "name": "CENTOS_74", "resources": {"image_type": "DISK_IMAGE", "checksum": {"checksum_algorithm": "", "type": "", "checksum_value": ""}, "source_uri": "http://download.nutanix.com/calm/CentOS-7-x86_64-GenericCloud.qcow2", "version": {"product_version": "", "type": "", "product_name": ""}, "architecture": "X86_64", "type": ""}, "description": ""}, "variable_list": [], "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}], "app_profile_list": [{"deployment_create_list": [{"type": "GREENFIELD", "description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "ddbf4911-6d87-459a-9fef-dfef69a25527", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "042c9dfd-2be7-43b2-b308-345b90a1957e"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "8a7c3602-72bf-4e7c-b180-5195c42cf558"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7af13354-5f60-47e4-804b-2c230d041194"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "3ecdab89-3aea-45ad-be3f-ddb310fe54db"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "6bc38f12-3f7d-46f6-89bc-2141326b82dc"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "ba29e9cb-c2e1-4052-b0ef-cf75c7f25ca9"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "6bc38f12-3f7d-46f6-89bc-2141326b82dc"}, "edge_type": "inherent", "type": "", "uuid": "df7f916c-cfce-404e-9fa2-5efbbc0703a9", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "ba29e9cb-c2e1-4052-b0ef-cf75c7f25ca9"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "3ecdab89-3aea-45ad-be3f-ddb310fe54db"}, "edge_type": "inherent", "type": "", "uuid": "1b509a92-6d8e-4236-b9e4-6693d1d09fcd", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "6bc38f12-3f7d-46f6-89bc-2141326b82dc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "042c9dfd-2be7-43b2-b308-345b90a1957e"}, "edge_type": "inherent", "type": "", "uuid": "a45c62a7-e0ae-4ef4-b341-339e69ae2856", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7af13354-5f60-47e4-804b-2c230d041194"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7af13354-5f60-47e4-804b-2c230d041194"}, "edge_type": "inherent", "type": "", "uuid": "df7c40a5-5320-455f-b268-78fd89adb8a4", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "3ecdab89-3aea-45ad-be3f-ddb310fe54db"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "8a7c3602-72bf-4e7c-b180-5195c42cf558"}, "edge_type": "inherent", "type": "", "uuid": "8f1d8ffa-c675-4d56-9d10-b03424c6219d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7af13354-5f60-47e4-804b-2c230d041194"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "042c9dfd-2be7-43b2-b308-345b90a1957e"}, "edge_type": "inherent", "type": "", "uuid": "95e5100d-6ca1-4b52-82cd-31ac0f6d805a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "8a7c3602-72bf-4e7c-b180-5195c42cf558"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "5f2525bf-f860-4c47-b131-d8dbaab07e83"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "042c9dfd-2be7-43b2-b308-345b90a1957e"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "8a7c3602-72bf-4e7c-b180-5195c42cf558"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "98e4314d-8b0e-4c1f-bc3c-d540cc7559df"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7af13354-5f60-47e4-804b-2c230d041194"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "03716932-7b1d-4f49-b96b-1ba37475339a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "3ecdab89-3aea-45ad-be3f-ddb310fe54db"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "a9639da1_runbook", "uuid": "3d368dde-d69c-453d-a94a-27b4e01be187"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6bc38f12-3f7d-46f6-89bc-2141326b82dc"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "ba29e9cb-c2e1-4052-b0ef-cf75c7f25ca9"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "5f2525bf-f860-4c47-b131-d8dbaab07e83"}, "message_list": [], "variable_list": [], "uuid": "670ca7a4-167c-4956-a20e-a87159b231c3"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "3d986d23-4815-479d-9dc0-565f568f3274", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "2e679cca-c764-4488-b46f-80abd09521b1"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2e3eabba-0426-438a-b7aa-5a6b8d36b47c"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "2e679cca-c764-4488-b46f-80abd09521b1"}, "edge_type": "inherent", "type": "", "uuid": "6e5a4b82-4522-4dd5-8bad-08f0f2013485", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2e3eabba-0426-438a-b7aa-5a6b8d36b47c"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "bc9a68c0-6fa2-4e68-801a-65609b8c29b7"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "b9d948dc-bc68-4f82-ba2c-f744b5ec23fe"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2e679cca-c764-4488-b46f-80abd09521b1"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2e3eabba-0426-438a-b7aa-5a6b8d36b47c"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "bc9a68c0-6fa2-4e68-801a-65609b8c29b7"}, "message_list": [], "variable_list": [], "uuid": "9608ff56-edad-40a2-9d61-90b5c12dda23"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "7cadfc9d-3fe5-4570-9c8e-97933af79f8c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9d74f6e6-a91a-47a5-8e6e-847cfaa559ba"}, {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "e9494c05-33f1-459a-afd3-a7367b073407"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9d74f6e6-a91a-47a5-8e6e-847cfaa559ba"}, "edge_type": "inherent", "type": "", "uuid": "6e4d1f33-e6cf-4d44-ad35-7c0636646534", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "e9494c05-33f1-459a-afd3-a7367b073407"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "43ce1495-02eb-4b08-80f6-eb6db507e986"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "29570f57-14c7-42f4-b2fb-2bd661d45236"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "9d74f6e6-a91a-47a5-8e6e-847cfaa559ba"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "d5c8316f_runbook", "uuid": "e46d02c0-cdda-467f-9e75-990238e6838f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e9494c05-33f1-459a-afd3-a7367b073407"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "43ce1495-02eb-4b08-80f6-eb6db507e986"}, "message_list": [], "variable_list": [], "uuid": "e6816346-2ebd-4829-b73a-324eeeec921c"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "c993af78-2685-4e7f-8dfa-c59051ddd6bd", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "17493a5d-0e2e-4875-ae40-b3cf7eef4d4b"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "972cd0c4-d38f-4f09-86bb-01cf58ed4666"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "17493a5d-0e2e-4875-ae40-b3cf7eef4d4b"}, "edge_type": "inherent", "type": "", "uuid": "d22a1c6c-ae1b-425d-b7c6-418a5e57b430", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "972cd0c4-d38f-4f09-86bb-01cf58ed4666"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "f0cbe3d9-60a4-4f5f-a62d-51fa56896b79"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "17493a5d-0e2e-4875-ae40-b3cf7eef4d4b"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "19fff8bf-4117-4a3e-b581-a66833f3acde"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "972cd0c4-d38f-4f09-86bb-01cf58ed4666"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "f0cbe3d9-60a4-4f5f-a62d-51fa56896b79"}, "message_list": [], "variable_list": [], "uuid": "6a985292-3eb2-4797-b461-39d99e1575a2"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "c470b3c4-7224-4da4-8245-e555b7566244", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "e1722873-e85f-4973-a6ce-7de825ea37cf"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0b4a3045-ddfc-4326-8648-62cc6c614f64"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "9c99bc9d-342e-41ac-a4c9-3528ac3075f6"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9fb20723-1fd5-4340-b032-23be17fb8d26"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "e85e9839-012b-4ade-a2c0-5adc7d6afbfa"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "e1722873-e85f-4973-a6ce-7de825ea37cf"}, "edge_type": "inherent", "type": "", "uuid": "0665d4d4-9c7e-4d46-937d-9b4fa86ef6f3", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0b4a3045-ddfc-4326-8648-62cc6c614f64"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0b4a3045-ddfc-4326-8648-62cc6c614f64"}, "edge_type": "inherent", "type": "", "uuid": "d4d40382-4eb5-496c-bddd-651f296780c5", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "9c99bc9d-342e-41ac-a4c9-3528ac3075f6"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9fb20723-1fd5-4340-b032-23be17fb8d26"}, "edge_type": "inherent", "type": "", "uuid": "4d4c4c30-77ed-48cd-bebc-8f7b06e7c4b0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "e85e9839-012b-4ade-a2c0-5adc7d6afbfa"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "9c99bc9d-342e-41ac-a4c9-3528ac3075f6"}, "edge_type": "inherent", "type": "", "uuid": "55400116-dde9-4266-a1b4-789854b6a157", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "9fb20723-1fd5-4340-b032-23be17fb8d26"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "85ed91f9-00c5-4ca6-83be-b96e6139de03"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e1722873-e85f-4973-a6ce-7de825ea37cf"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "8c4aa276_runbook", "uuid": "61169cf0-b034-42a4-9d82-e978cd3cf085"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "0b4a3045-ddfc-4326-8648-62cc6c614f64"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "02695c22-fc1e-4d31-8e02-2767a7e8526f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "9c99bc9d-342e-41ac-a4c9-3528ac3075f6"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "1ebb904d-2ec0-4639-9ffc-b20be9b31a07"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "9fb20723-1fd5-4340-b032-23be17fb8d26"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "e85e9839-012b-4ade-a2c0-5adc7d6afbfa"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "85ed91f9-00c5-4ca6-83be-b96e6139de03"}, "message_list": [], "variable_list": [], "uuid": "bb1bbb99-0dcb-4aff-81d7-04dce7ef54ec"}, "message_list": [], "name": "action_delete"}, {"description": "System action for scaleout", "type": "system", "uuid": "768bcb79-454b-4b57-9e1e-2d6b89c00faf", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scaleout_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "3d519a16-b0b9-4072-b877-edb383d61693"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "bb05301e-5a80-461a-8e55-f050168fb378"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scaleout_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "3d519a16-b0b9-4072-b877-edb383d61693"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "bb05301e-5a80-461a-8e55-f050168fb378"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "scaling_count", "type": "LOCAL", "value": "0", "label": "", "state": "NOT_VALIDATED", "attrs": {}, "editables": {"value": true}, "message_list": [], "uuid": "008484ed-52a8-4e47-a4ac-976300361443"}], "uuid": "84e367b8-4384-49f6-8837-3faba1c4fea6"}, "message_list": [], "name": "action_scaleout"}, {"description": "System action for scalein", "type": "system", "uuid": "fffeeb1c-f27c-438d-aff4-8989eecdbaf9", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scalein_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "8096b003-3e53-40c3-9ac3-cb895214792d"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "7652ab5c-26d6-4e64-935f-d597bc12f8ae"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scalein_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "8096b003-3e53-40c3-9ac3-cb895214792d"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "7652ab5c-26d6-4e64-935f-d597bc12f8ae"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "scaling_count", "type": "LOCAL", "value": "0", "label": "", "state": "NOT_VALIDATED", "attrs": {}, "editables": {"value": true}, "message_list": [], "uuid": "4def23a3-1dd2-4bae-b18d-f7ac66435df1"}], "uuid": "3c5410ec-558b-4914-89ff-f2e233e086f9"}, "message_list": [], "name": "action_scalein"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "6966c091-17c1-46ea-aa3d-252d99058bb4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "b173d725-4321-4250-b1fd-1f5843a71495"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "76f994d3-022c-43a0-985d-2ed103b4ccf5"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7589081d-d17a-47cb-915f-df5d5924e8e4"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "b7020f54-8f97-4843-8077-4e7baa1a733e"}], "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "b173d725-4321-4250-b1fd-1f5843a71495"}, "edge_type": "inherent", "type": "", "uuid": "05b47bf4-28e9-4f23-8474-9cf30952c28f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "76f994d3-022c-43a0-985d-2ed103b4ccf5"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7589081d-d17a-47cb-915f-df5d5924e8e4"}, "edge_type": "inherent", "type": "", "uuid": "695a35f7-0548-4f50-a86a-e347ae6cd4bc", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "b7020f54-8f97-4843-8077-4e7baa1a733e"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "76f994d3-022c-43a0-985d-2ed103b4ccf5"}, "edge_type": "inherent", "type": "", "uuid": "d6c05549-33f8-4ac0-bbb4-7a65beddde68", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "7589081d-d17a-47cb-915f-df5d5924e8e4"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "034ec611-b356-48ef-8507-eb334ef8f05b"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "33b4ef38-57c7-492a-8f45-bb91606ad36a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "b173d725-4321-4250-b1fd-1f5843a71495"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "76f994d3-022c-43a0-985d-2ed103b4ccf5"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "8b49c08f-eece-4c81-a233-b407246669f3"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7589081d-d17a-47cb-915f-df5d5924e8e4"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "b7020f54-8f97-4843-8077-4e7baa1a733e"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "034ec611-b356-48ef-8507-eb334ef8f05b"}, "message_list": [], "variable_list": [], "uuid": "9a624c03-13fb-4ff0-b829-1a308fd37bdf"}, "message_list": [], "name": "action_soft_delete"}], "message_list": [], "editables": {"min_replicas": true, "max_replicas": true}, "name": "2cbb2f6a_deployment", "state": "ACTIVE", "max_replicas": "3", "package_local_reference_list": [{"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}], "substrate_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "min_replicas": "3", "variable_list": [], "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, {"type": "GREENFIELD", "description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "b5843127-20c3-4815-b789-e4bf88c74905", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "e3ce96b9-9280-40d2-b8b4-d34ed63674e1"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "e9cf765f-237f-4c58-be2e-15f7c81f63a1"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "bf7cc380-42a5-478d-841d-74fe514e5e97"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "55c1b236-24a2-4b22-b284-bc809636690b"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "357f22b9-4784-4790-ba0e-126f0cb20f8c"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "6eebe142-d4b2-47c6-9220-2f539ec809c9"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "357f22b9-4784-4790-ba0e-126f0cb20f8c"}, "edge_type": "inherent", "type": "", "uuid": "6a7fc4c0-26a5-403a-aa04-b7dab72b5a31", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "6eebe142-d4b2-47c6-9220-2f539ec809c9"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "55c1b236-24a2-4b22-b284-bc809636690b"}, "edge_type": "inherent", "type": "", "uuid": "ced3867f-db83-4167-b30f-f6eb8ad0db89", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "357f22b9-4784-4790-ba0e-126f0cb20f8c"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "e3ce96b9-9280-40d2-b8b4-d34ed63674e1"}, "edge_type": "inherent", "type": "", "uuid": "62b60f01-212d-45d4-8172-462db522e418", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "bf7cc380-42a5-478d-841d-74fe514e5e97"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "bf7cc380-42a5-478d-841d-74fe514e5e97"}, "edge_type": "inherent", "type": "", "uuid": "4f71f34a-165e-4342-b301-adb7e4f3f75e", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "55c1b236-24a2-4b22-b284-bc809636690b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "e9cf765f-237f-4c58-be2e-15f7c81f63a1"}, "edge_type": "inherent", "type": "", "uuid": "24eed0c4-48ae-4834-9da3-8488a12c4ac9", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "bf7cc380-42a5-478d-841d-74fe514e5e97"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "e3ce96b9-9280-40d2-b8b4-d34ed63674e1"}, "edge_type": "inherent", "type": "", "uuid": "fc7607df-da37-485a-8e1f-7b1606336ffa", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "e9cf765f-237f-4c58-be2e-15f7c81f63a1"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "c2ed9eb8-b668-40f8-84ea-874fe675e684"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "e3ce96b9-9280-40d2-b8b4-d34ed63674e1"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e9cf765f-237f-4c58-be2e-15f7c81f63a1"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "e7fe5b86-088f-4d41-a97f-22a671ca9e28"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "bf7cc380-42a5-478d-841d-74fe514e5e97"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "01781f24-512f-4cb8-ae0c-e479cf42db21"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "55c1b236-24a2-4b22-b284-bc809636690b"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "7c6e4932_runbook", "uuid": "40fa74a0-f7c1-4ec7-bf42-137661b83184"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "357f22b9-4784-4790-ba0e-126f0cb20f8c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6eebe142-d4b2-47c6-9220-2f539ec809c9"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "c2ed9eb8-b668-40f8-84ea-874fe675e684"}, "message_list": [], "variable_list": [], "uuid": "49556644-7bb3-48c0-8d64-b5a5cfb0993a"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "d0c77121-387e-4dd4-a3d3-57b17a9ea320", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6602ced3-2895-444a-9b8f-f8f7c5ac90a9"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a0cb9770-15b3-46e5-9b8a-f3adc99d7e84"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6602ced3-2895-444a-9b8f-f8f7c5ac90a9"}, "edge_type": "inherent", "type": "", "uuid": "36e0764c-f9e8-4d9b-b484-e5dddfbb6110", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a0cb9770-15b3-46e5-9b8a-f3adc99d7e84"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "882e7220-862f-449a-a466-ffaf7a66c399"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "3a635c28-eef3-46d9-b46b-f04e740188bd"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6602ced3-2895-444a-9b8f-f8f7c5ac90a9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a0cb9770-15b3-46e5-9b8a-f3adc99d7e84"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "882e7220-862f-449a-a466-ffaf7a66c399"}, "message_list": [], "variable_list": [], "uuid": "5a64c290-40e2-47a5-9ea1-024a889a2f5d"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "25474209-01da-447e-a16b-e7b3ed78a5ee", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "64b2d63f-0a6a-4c9c-8fe6-7d120db0cb95"}, {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "346da6b5-0bdd-4beb-b570-90f6a1b33c64"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "64b2d63f-0a6a-4c9c-8fe6-7d120db0cb95"}, "edge_type": "inherent", "type": "", "uuid": "eca93682-b037-4614-b898-61cf4dc46892", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "346da6b5-0bdd-4beb-b570-90f6a1b33c64"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "acffa4a7-2906-4b1c-90d7-62655a708776"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "35d28241-bfa8-4d35-bee9-912690d2fec5"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "64b2d63f-0a6a-4c9c-8fe6-7d120db0cb95"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "3a6f587d_runbook", "uuid": "fc0fd49c-f9e5-4b52-a6b7-056253d9228f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "346da6b5-0bdd-4beb-b570-90f6a1b33c64"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "acffa4a7-2906-4b1c-90d7-62655a708776"}, "message_list": [], "variable_list": [], "uuid": "1f491ee9-d950-4f60-90d7-cb678c838612"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "082f4be6-7fca-4b24-b6cb-00a58ed24b82", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "5c48c25c-f1de-471f-a4a3-4ab83a9592e7"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "2c37aa3d-ced6-4aa3-9619-dc5e55944eaf"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "5c48c25c-f1de-471f-a4a3-4ab83a9592e7"}, "edge_type": "inherent", "type": "", "uuid": "4dd453e9-e0c0-432b-b9ff-4ea32128baa4", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "2c37aa3d-ced6-4aa3-9619-dc5e55944eaf"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "604fcfec-ccfd-43c2-939a-95d6c3441a2a"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "5c48c25c-f1de-471f-a4a3-4ab83a9592e7"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "712488a1-852e-4181-9556-40cac689cd3a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2c37aa3d-ced6-4aa3-9619-dc5e55944eaf"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "604fcfec-ccfd-43c2-939a-95d6c3441a2a"}, "message_list": [], "variable_list": [], "uuid": "b8bf4b05-ec1d-42d6-83af-63262560f3d7"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "eeb893f2-d2c7-4b31-95c3-78c70c14d636", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "09b504ce-f4b1-4a02-9650-9875a943dfaa"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "bbf3f669-f958-4193-8370-16ba3ef02254"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "47490c43-e0a0-4944-bce9-4a860d0db207"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "a0636a16-c0c6-4a88-9673-0023a2ecbe8f"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "cf184863-dffa-4bd7-b528-839cef2791f3"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "09b504ce-f4b1-4a02-9650-9875a943dfaa"}, "edge_type": "inherent", "type": "", "uuid": "da970afd-ae2e-4d27-b023-14e7b4490d93", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "bbf3f669-f958-4193-8370-16ba3ef02254"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "bbf3f669-f958-4193-8370-16ba3ef02254"}, "edge_type": "inherent", "type": "", "uuid": "8931318c-4039-44e0-b1bc-95c72481a1bb", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "47490c43-e0a0-4944-bce9-4a860d0db207"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "47490c43-e0a0-4944-bce9-4a860d0db207"}, "edge_type": "inherent", "type": "", "uuid": "43a7045c-1689-4742-b96b-e63b0a827e20", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "a0636a16-c0c6-4a88-9673-0023a2ecbe8f"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "a0636a16-c0c6-4a88-9673-0023a2ecbe8f"}, "edge_type": "inherent", "type": "", "uuid": "13aab1fb-36e7-49d7-8aec-97b695ca1fbb", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "cf184863-dffa-4bd7-b528-839cef2791f3"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "e4dbaadb-42b8-4e0a-830d-958b7ff7773d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "09b504ce-f4b1-4a02-9650-9875a943dfaa"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "1d794193_runbook", "uuid": "64f8d8db-a2e5-4b8b-93e6-3f8ca1f28a11"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "bbf3f669-f958-4193-8370-16ba3ef02254"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "5e799894-f65d-404a-85df-be37655f5cf2"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "47490c43-e0a0-4944-bce9-4a860d0db207"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b6951360-e78d-4824-bdfd-f2db95b36b54"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a0636a16-c0c6-4a88-9673-0023a2ecbe8f"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "cf184863-dffa-4bd7-b528-839cef2791f3"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "e4dbaadb-42b8-4e0a-830d-958b7ff7773d"}, "message_list": [], "variable_list": [], "uuid": "d18c0de7-9ba9-432a-86b2-ee8b85ddfe65"}, "message_list": [], "name": "action_delete"}, {"description": "System action for scaleout", "type": "system", "uuid": "ab94eea9-90a7-4491-b3d9-0c85ec81470b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scaleout_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "2eeca930-2427-4f3e-bc97-166255a50dfa"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "0c1d04a4-9d68-49ff-9e74-12c8631f79d4"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scaleout_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "2eeca930-2427-4f3e-bc97-166255a50dfa"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "0c1d04a4-9d68-49ff-9e74-12c8631f79d4"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "scaling_count", "type": "LOCAL", "value": "0", "label": "", "state": "NOT_VALIDATED", "attrs": {}, "editables": {"value": true}, "message_list": [], "uuid": "f18cd5ba-4014-462b-b40c-e961a7846dfa"}], "uuid": "d20d2e96-caf9-407a-a556-be2765be22d4"}, "message_list": [], "name": "action_scaleout"}, {"description": "System action for scalein", "type": "system", "uuid": "4fe77e1d-b5a9-44c7-90c9-8c172c54b6e1", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scalein_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "e7372f97-3909-47c1-8bf7-1bb1ee339c51"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "09fbbcf2-f30c-450b-9cdd-7246439f523f"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scalein_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "e7372f97-3909-47c1-8bf7-1bb1ee339c51"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "09fbbcf2-f30c-450b-9cdd-7246439f523f"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "scaling_count", "type": "LOCAL", "value": "0", "label": "", "state": "NOT_VALIDATED", "attrs": {}, "editables": {"value": true}, "message_list": [], "uuid": "e444cc2c-a042-4eaa-83c0-cb084b065c7d"}], "uuid": "d4f37052-3725-4979-9be8-8a59a02e3af2"}, "message_list": [], "name": "action_scalein"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "ce64fca5-620e-4764-8a3f-99d318febe48", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "6b5de6f6-0f9b-4c73-bccd-563b4dd6ba7c"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "2612e49a-2836-4626-9407-94ac19aa06a2"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6089477e-f9ae-4514-9298-ef90c8b5388f"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "2bb28bda-acba-472c-b0df-22935ca40cf1"}], "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "6b5de6f6-0f9b-4c73-bccd-563b4dd6ba7c"}, "edge_type": "inherent", "type": "", "uuid": "4549b588-8e11-483e-bc3c-b2cdb18868c8", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "2612e49a-2836-4626-9407-94ac19aa06a2"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6089477e-f9ae-4514-9298-ef90c8b5388f"}, "edge_type": "inherent", "type": "", "uuid": "9aff205c-de3b-40de-9339-4e60b54ef0b1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "2bb28bda-acba-472c-b0df-22935ca40cf1"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "2612e49a-2836-4626-9407-94ac19aa06a2"}, "edge_type": "inherent", "type": "", "uuid": "d90d9289-189a-4162-a010-8fb9159bd3f6", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6089477e-f9ae-4514-9298-ef90c8b5388f"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "df08d85a-5ef0-46c5-92a8-e13be0ff9ed6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7283449d-70a5-4258-8989-510926d97bb1"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6b5de6f6-0f9b-4c73-bccd-563b4dd6ba7c"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "2612e49a-2836-4626-9407-94ac19aa06a2"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "c8c91f3d-8bb9-461d-a2eb-d2ff75f4bc1d"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6089477e-f9ae-4514-9298-ef90c8b5388f"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "2bb28bda-acba-472c-b0df-22935ca40cf1"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "df08d85a-5ef0-46c5-92a8-e13be0ff9ed6"}, "message_list": [], "variable_list": [], "uuid": "ece9f90c-acfd-4991-8c67-9145b6635b5e"}, "message_list": [], "name": "action_soft_delete"}], "message_list": [], "editables": {"min_replicas": true, "max_replicas": true}, "name": "39cf7283_deployment", "state": "ACTIVE", "max_replicas": "9", "package_local_reference_list": [{"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}], "substrate_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "min_replicas": "3", "variable_list": [], "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}], "description": "", "action_list": [{"description": "", "type": "user", "uuid": "3578f9f8-46a7-478d-9e69-0ea129a49a18", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Upgrade Minion", "uuid": "c28fada3-1169-453a-913e-107cda29d229"}, {"kind": "app_task", "name": "Upgrade Controller", "uuid": "a0320cb5-8904-4df1-b615-ee9b8ea95b32"}, {"kind": "app_task", "name": "Restart Service", "uuid": "0b40ee05-3a21-4fd9-97e8-c365773df0e6"}], "name": "6ee65d8a_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Upgrade Controller", "uuid": "a0320cb5-8904-4df1-b615-ee9b8ea95b32"}, "edge_type": "user_defined", "type": "", "uuid": "939451fd-973d-4695-b645-bf449daf9d7c", "to_task_reference": {"kind": "app_task", "name": "Restart Service", "uuid": "0b40ee05-3a21-4fd9-97e8-c365773df0e6"}}, {"from_task_reference": {"kind": "app_task", "name": "Upgrade Minion", "uuid": "c28fada3-1169-453a-913e-107cda29d229"}, "edge_type": "user_defined", "type": "", "uuid": "d3b54ff6-59b2-436c-bcd6-03c3d253629e", "to_task_reference": {"kind": "app_task", "name": "Restart Service", "uuid": "0b40ee05-3a21-4fd9-97e8-c365773df0e6"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "6fe3df58-76a8-440c-8c77-1fc37560666d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Upgrade Minion", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "c28fada3-1169-453a-913e-107cda29d229"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Upgrade Controller", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "a0320cb5-8904-4df1-b615-ee9b8ea95b32"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Restart Service", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nMASTER_API_HTTPS=6443\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/kubectl\n\ncount=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https://${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n  \techo \"Unable to reach master server: https://${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n  \texit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${MINION_IPS}\" | tr \",\" \"\\n\"); do\n  kubectl drain \"minion${count}\" --ignore-daemonsets --delete-local-data --force\n  sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io/hostname=minion${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>/dev/null` ]]; do sleep 10 ; done\n  kubectl uncordon minion${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on minion nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  kubectl drain \"controller${count}\" --ignore-daemonsets --delete-local-data --force\n  sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io/hostname=controller${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>/dev/null` ]]; do sleep 10 ; done\n  kubectl uncordon controller${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "0b40ee05-3a21-4fd9-97e8-c365773df0e6"}], "description": "", "name": "68a7ffd0_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "6ee65d8a_dag", "uuid": "6fe3df58-76a8-440c-8c77-1fc37560666d"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "KUBE_IMAGE_TAG_NEW", "type": "LOCAL", "value": "v1.8.0_coreos.0", "label": "", "state": "NOT_VALIDATED", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "f2799bb3-d210-4caf-be8b-2e55dc9511a2"}], "uuid": "90acd364-e343-4ee7-838e-000ae6fcc329"}, "message_list": [], "name": "Upgrade"}, {"description": "", "type": "user", "uuid": "51afc252-2f60-4c28-b85c-519fe658283d", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Scale Out", "uuid": "8d8d2926-6eab-482b-9e7d-b79fbc7f91b7"}, {"kind": "app_task", "name": "Set Hosts file", "uuid": "5b5fb0b7-ceb2-411d-920c-42c939c5fb9b"}], "name": "03b33121_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Scale Out", "uuid": "8d8d2926-6eab-482b-9e7d-b79fbc7f91b7"}, "edge_type": "user_defined", "type": "", "uuid": "9551ae94-de5c-41a5-ab76-c26a39c6ff79", "to_task_reference": {"kind": "app_task", "name": "Set Hosts file", "uuid": "5b5fb0b7-ceb2-411d-920c-42c939c5fb9b"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "8837d072-c5af-4e86-9e74-0a59b8930337"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Scale Out", "state": "ACTIVE", "attrs": {"scaling_count": "@@{COUNT}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "8d8d2926-6eab-482b-9e7d-b79fbc7f91b7"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Set Hosts file", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} minion${count}\" /etc/hosts) )) ; then\n  \techo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  fi\n  count=$((count+1))\ndone", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "uuid": "5b5fb0b7-ceb2-411d-920c-42c939c5fb9b"}], "description": "", "name": "00cf5417_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "03b33121_dag", "uuid": "8837d072-c5af-4e86-9e74-0a59b8930337"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "KUBE_IMAGE_TAG_NEW", "type": "LOCAL", "value": "v1.8.0_coreos.0", "label": "", "state": "NOT_VALIDATED", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "da96d967-3fe0-4844-8e7c-1c97a8cdac4a"}, {"val_type": "STRING", "description": "", "name": "COUNT", "type": "LOCAL", "value": "1", "label": "", "state": "NOT_VALIDATED", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "7c0b9f1d-3353-4c57-8042-a4484332fa2d"}], "uuid": "bdf5da75-0fb9-4eee-ad07-d8eb6746a6ab"}, "message_list": [], "name": "ScaleOut"}, {"description": "", "type": "user", "uuid": "5f7af0ba-7440-4290-b0ea-c6098fe1c79c", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Scale In", "uuid": "1368f03b-0785-496c-a6d7-d91fd30fc81a"}], "name": "e72a9133_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "a49483d8-f03e-421a-b893-f6e983ea9438"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Scale In", "state": "ACTIVE", "attrs": {"scaling_count": "@@{COUNT}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "uuid": "1368f03b-0785-496c-a6d7-d91fd30fc81a"}], "description": "", "name": "96546f6c_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "e72a9133_dag", "uuid": "a49483d8-f03e-421a-b893-f6e983ea9438"}, "message_list": [], "variable_list": [{"val_type": "STRING", "description": "", "name": "COUNT", "type": "LOCAL", "value": "1", "label": "", "state": "NOT_VALIDATED", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "651fe3d8-8ab2-4532-afbe-a774997bf7ce"}], "uuid": "2b28a798-d9ec-4f0d-bdcb-7c9320316cd2"}, "message_list": [], "name": "ScaleIn"}, {"description": "System action for creating an application", "type": "system", "uuid": "ea69a206-80b4-4a9b-a59b-96e51319acb4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "9301c6e9-bbbe-4844-8957-e775eff9d1c5"}, {"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "31eddb0e-8059-4671-b981-1b361fa769cb"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "45efdd47-ef77-4110-a17f-fa66a27e3e9c"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef_1", "uuid": "d89e038f-1d72-4fc1-a310-474530d372d8"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "245fda08-a279-4670-a80f-2d9501926703"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "1d4a09a8-c530-4e16-902e-c8064a5fe3e7"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "97dc9b51-b404-41e7-90c5-f00ab7c8a4b9"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "cf6ca2af-8317-4b3c-ae90-00141873ae94"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0a31388e-b74a-48a6-b7f6-8077b6718436"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "fb17573d-9e09-41dd-8957-be913d55c999"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2d6f755b-2013-4dea-adea-4a7ba6366f29"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "cf6ca2af-8317-4b3c-ae90-00141873ae94"}, "edge_type": "inherent", "type": "", "uuid": "277db5b8-e12a-40f4-abc7-c9128a38662b", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "fb17573d-9e09-41dd-8957-be913d55c999"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "97dc9b51-b404-41e7-90c5-f00ab7c8a4b9"}, "edge_type": "inherent", "type": "", "uuid": "92f82292-c669-47c5-8da7-becdf9941e37", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "cf6ca2af-8317-4b3c-ae90-00141873ae94"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "9301c6e9-bbbe-4844-8957-e775eff9d1c5"}, "edge_type": "inherent", "type": "", "uuid": "83f4ad27-1705-4c18-a57c-5cf7df6698a0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "245fda08-a279-4670-a80f-2d9501926703"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "245fda08-a279-4670-a80f-2d9501926703"}, "edge_type": "inherent", "type": "", "uuid": "9de6a0ba-26d9-4386-b821-771262fc27b1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "97dc9b51-b404-41e7-90c5-f00ab7c8a4b9"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "45efdd47-ef77-4110-a17f-fa66a27e3e9c"}, "edge_type": "inherent", "type": "", "uuid": "8283fad9-e7a2-4913-9ba4-394af6a5a7a2", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "245fda08-a279-4670-a80f-2d9501926703"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "9301c6e9-bbbe-4844-8957-e775eff9d1c5"}, "edge_type": "inherent", "type": "", "uuid": "45c5eba5-aa2e-47f7-8d67-767cff32cc15", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "45efdd47-ef77-4110-a17f-fa66a27e3e9c"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0a31388e-b74a-48a6-b7f6-8077b6718436"}, "edge_type": "inherent", "type": "", "uuid": "c59b1175-d539-480c-be1c-0d81536cbc89", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2d6f755b-2013-4dea-adea-4a7ba6366f29"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "1d4a09a8-c530-4e16-902e-c8064a5fe3e7"}, "edge_type": "inherent", "type": "", "uuid": "0f6f2c6a-c6d3-4260-b544-0af9a1109617", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "0a31388e-b74a-48a6-b7f6-8077b6718436"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "31eddb0e-8059-4671-b981-1b361fa769cb"}, "edge_type": "inherent", "type": "", "uuid": "b4221e47-1bca-4c0e-b6fe-56ade8404443", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}, "edge_type": "inherent", "type": "", "uuid": "16739a9e-7332-49eb-bb1c-8f0ec5d97289", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "1d4a09a8-c530-4e16-902e-c8064a5fe3e7"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef_1", "uuid": "d89e038f-1d72-4fc1-a310-474530d372d8"}, "edge_type": "inherent", "type": "", "uuid": "a8d6f1ac-5646-4b08-872b-f47ece321b8f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "31eddb0e-8059-4671-b981-1b361fa769cb"}, "edge_type": "inherent", "type": "", "uuid": "b71884da-4862-428b-ab27-a1a4f9822add", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef_1", "uuid": "d89e038f-1d72-4fc1-a310-474530d372d8"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}, "edge_type": "dependency", "type": "", "uuid": "8a665e08-6ce3-40fe-81ae-9ebf44ee1352", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "97dc9b51-b404-41e7-90c5-f00ab7c8a4b9"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "245fda08-a279-4670-a80f-2d9501926703"}, "edge_type": "dependency", "type": "", "uuid": "50f06a54-85d5-4fd3-b2c9-771ccaad5ccc", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "1d4a09a8-c530-4e16-902e-c8064a5fe3e7"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "bec3a17a-6a99-40a8-8fc6-c4bc72eb458a"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "9301c6e9-bbbe-4844-8957-e775eff9d1c5"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "31eddb0e-8059-4671-b981-1b361fa769cb"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "45efdd47-ef77-4110-a17f-fa66a27e3e9c"}, {"target_any_local_reference": {"kind": "app_package", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_7bbed456_01fb_4879_8931_e549fdeb18ef_1", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_7bbed456_01fb_4879_8931_e549fdeb18ef", "uuid": "91e8eaed-153f-48aa-8f4e-19543861c728"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "d89e038f-1d72-4fc1-a310-474530d372d8"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "e7fe5b86-088f-4d41-a97f-22a671ca9e28"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "245fda08-a279-4670-a80f-2d9501926703"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "98e4314d-8b0e-4c1f-bc3c-d540cc7559df"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "3b308737-b10d-40a5-96b0-e1969671ef12"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "03716932-7b1d-4f49-b96b-1ba37475339a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1d4a09a8-c530-4e16-902e-c8064a5fe3e7"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "01781f24-512f-4cb8-ae0c-e479cf42db21"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "97dc9b51-b404-41e7-90c5-f00ab7c8a4b9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "7c6e4932_runbook", "uuid": "40fa74a0-f7c1-4ec7-bf42-137661b83184"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "cf6ca2af-8317-4b3c-ae90-00141873ae94"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "a9639da1_runbook", "uuid": "3d368dde-d69c-453d-a94a-27b4e01be187"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "0a31388e-b74a-48a6-b7f6-8077b6718436"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "fb17573d-9e09-41dd-8957-be913d55c999"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2d6f755b-2013-4dea-adea-4a7ba6366f29"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "bec3a17a-6a99-40a8-8fc6-c4bc72eb458a"}, "message_list": [], "variable_list": [], "uuid": "b2a2aa14-375c-4501-a2bf-f2d01d548e71"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "9b9298fb-b6b9-44e7-a641-706127e27732", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "0667369c-365b-4877-a7be-777903834437"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "1fd83716-8e1c-403d-8706-5e1d74e72784"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "6223de9e-8a13-43e6-ab69-28487d77aa1e"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "d35297a2-5ac1-4368-8b9c-d0c94822cc69"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "0667369c-365b-4877-a7be-777903834437"}, "edge_type": "inherent", "type": "", "uuid": "22d5c990-11e2-4e6f-98f3-8d088cc826b7", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "d35297a2-5ac1-4368-8b9c-d0c94822cc69"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "1fd83716-8e1c-403d-8706-5e1d74e72784"}, "edge_type": "inherent", "type": "", "uuid": "e53fa397-6055-4c47-b9b1-deaec32fda43", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "6223de9e-8a13-43e6-ab69-28487d77aa1e"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "7d83806e-5d7e-4045-8b7a-b66f0dba0ff5"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "3a635c28-eef3-46d9-b46b-f04e740188bd"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "0667369c-365b-4877-a7be-777903834437"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "b9d948dc-bc68-4f82-ba2c-f744b5ec23fe"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1fd83716-8e1c-403d-8706-5e1d74e72784"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "daee30ae_runbook", "uuid": "fab01820-f96b-4fca-8249-7fb3968fc5e8"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6223de9e-8a13-43e6-ab69-28487d77aa1e"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "884352cf_runbook", "uuid": "3878e829-81a4-484c-99b7-40caa47a0c97"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "d35297a2-5ac1-4368-8b9c-d0c94822cc69"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "7d83806e-5d7e-4045-8b7a-b66f0dba0ff5"}, "message_list": [], "variable_list": [], "uuid": "e0267e70-44ba-45ec-91ff-626d77c3fc54"}, "message_list": [], "name": "action_start"}, {"description": "System action for restarting an application", "type": "system", "uuid": "445fd8c5-9475-4199-9770-538a2dbab932", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6aa45cac-a974-4ee5-9d8f-19f139783d7e"}, {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6fb77f09-8da1-48bc-a488-fa4e5478dbf2"}, {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2adce6d8-5453-4ef0-8430-43bbb8712673"}, {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "f21ca97c-9e76-4920-9ea3-4a18760bc01d"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "6fb77f09-8da1-48bc-a488-fa4e5478dbf2"}, "edge_type": "inherent", "type": "", "uuid": "c2475d8c-c0a2-4edb-92a8-182829ae0924", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "f21ca97c-9e76-4920-9ea3-4a18760bc01d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6aa45cac-a974-4ee5-9d8f-19f139783d7e"}, "edge_type": "inherent", "type": "", "uuid": "4c0b789e-4a6a-4011-8dcc-ddaa7bbc38e4", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2adce6d8-5453-4ef0-8430-43bbb8712673"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "9ba15e0a-761c-41fd-889d-43b298ae7d99"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "29570f57-14c7-42f4-b2fb-2bd661d45236"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6aa45cac-a974-4ee5-9d8f-19f139783d7e"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "35d28241-bfa8-4d35-bee9-912690d2fec5"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6fb77f09-8da1-48bc-a488-fa4e5478dbf2"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "d5c8316f_runbook", "uuid": "e46d02c0-cdda-467f-9e75-990238e6838f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2adce6d8-5453-4ef0-8430-43bbb8712673"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__restart_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "3a6f587d_runbook", "uuid": "fc0fd49c-f9e5-4b52-a6b7-056253d9228f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "f21ca97c-9e76-4920-9ea3-4a18760bc01d"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "9ba15e0a-761c-41fd-889d-43b298ae7d99"}, "message_list": [], "variable_list": [], "uuid": "e9d46e7f-b8be-4af0-8406-e21677e2f601"}, "message_list": [], "name": "action_restart"}, {"description": "System action for stopping an application", "type": "system", "uuid": "1ea64780-f309-4011-ae0a-0d15a92fda36", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "89b0d21d-43d2-43eb-b8d1-9647c892a90d"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "77bb7b6d-d676-4ca7-a6fa-5c0abb375520"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b109595e-ce68-4265-a216-8149f1f386be"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "c01df964-9d20-4e79-aab1-c42fe204aab1"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "89b0d21d-43d2-43eb-b8d1-9647c892a90d"}, "edge_type": "inherent", "type": "", "uuid": "51fc8999-662f-4681-bf9e-f41f0e6009c8", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b109595e-ce68-4265-a216-8149f1f386be"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "77bb7b6d-d676-4ca7-a6fa-5c0abb375520"}, "edge_type": "inherent", "type": "", "uuid": "0025a1de-db25-49db-8793-8ac95899b14f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "c01df964-9d20-4e79-aab1-c42fe204aab1"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "971d5e37-3087-48ee-8821-a03acc89f70d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "89b0d21d-43d2-43eb-b8d1-9647c892a90d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "77bb7b6d-d676-4ca7-a6fa-5c0abb375520"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "712488a1-852e-4181-9556-40cac689cd3a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "b109595e-ce68-4265-a216-8149f1f386be"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "19fff8bf-4117-4a3e-b581-a66833f3acde"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "c01df964-9d20-4e79-aab1-c42fe204aab1"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "971d5e37-3087-48ee-8821-a03acc89f70d"}, "message_list": [], "variable_list": [], "uuid": "5f9457ef-d3ae-40ba-a61f-b1bdae20f83e"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes created VMs as well", "type": "system", "uuid": "dde25647-f191-4532-9cd6-2ace128d053c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "90afc4d9-b501-4326-969f-2cbe343ea1ff"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "da8274d9-5d01-48da-abc0-f02339d2a5b6"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2fc358da-627d-4675-8be2-b60bf9f73afc"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "e7d61529-b0ca-407b-8384-35857d004c0a"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "6088f0e0-7780-4a3e-8ec8-3003d356ab17"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "66372a9c-8e96-4858-aa4b-60b167b59c67"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6adc326a-9fa3-4484-b12d-92db464d16ac"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "9235604e-9103-4f07-b489-0253033f0dca"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "7a3efaa2-7a70-470b-aff7-fc327727fd70"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "da8274d9-5d01-48da-abc0-f02339d2a5b6"}, "edge_type": "inherent", "type": "", "uuid": "1b6a1d82-22e8-4ea2-b32e-65ef9daf3d7c", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "e7d61529-b0ca-407b-8384-35857d004c0a"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "e7d61529-b0ca-407b-8384-35857d004c0a"}, "edge_type": "inherent", "type": "", "uuid": "554e74ea-ccfb-4eae-ae12-e5089175db1a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}, "edge_type": "inherent", "type": "", "uuid": "658c1d7b-228a-4792-894d-822875253705", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "66372a9c-8e96-4858-aa4b-60b167b59c67"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "66372a9c-8e96-4858-aa4b-60b167b59c67"}, "edge_type": "inherent", "type": "", "uuid": "837af231-92ae-491f-b078-7430f9b8e1bc", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "9235604e-9103-4f07-b489-0253033f0dca"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "90afc4d9-b501-4326-969f-2cbe343ea1ff"}, "edge_type": "inherent", "type": "", "uuid": "4e7ad705-a18b-445a-b075-25a26bd2ba06", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2fc358da-627d-4675-8be2-b60bf9f73afc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2fc358da-627d-4675-8be2-b60bf9f73afc"}, "edge_type": "inherent", "type": "", "uuid": "c7471a46-2bd0-46bf-bbfa-848f322551b7", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "6088f0e0-7780-4a3e-8ec8-3003d356ab17"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6adc326a-9fa3-4484-b12d-92db464d16ac"}, "edge_type": "inherent", "type": "", "uuid": "431c2c9e-826b-4189-9d8d-8dcd8bec0ae0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "7a3efaa2-7a70-470b-aff7-fc327727fd70"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "6088f0e0-7780-4a3e-8ec8-3003d356ab17"}, "edge_type": "inherent", "type": "", "uuid": "2cb08a7e-7f61-442a-8345-ffc4d509cfd1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6adc326a-9fa3-4484-b12d-92db464d16ac"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}, "edge_type": "create_action_edge", "type": "", "uuid": "64da22db-e803-4937-ad13-f6561905b966", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "6adc326a-9fa3-4484-b12d-92db464d16ac"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "6088f0e0-7780-4a3e-8ec8-3003d356ab17"}, "edge_type": "create_action_edge", "type": "", "uuid": "5016b7d9-419f-4606-849d-851ef139a2d5", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "66372a9c-8e96-4858-aa4b-60b167b59c67"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "2fc358da-627d-4675-8be2-b60bf9f73afc"}, "edge_type": "dependency", "type": "", "uuid": "eb5a3869-09d9-416f-b399-c1e806ee5ee7", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "787cf89d-7017-4243-9b84-bb4821a3b06c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "6407a345_runbook", "uuid": "e9d5f00f-18f0-4a54-b04a-1bfd13c455c0"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "90afc4d9-b501-4326-969f-2cbe343ea1ff"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "0cb172a7_runbook", "uuid": "7a37e4eb-baf1-404a-8064-b14e749e7058"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "da8274d9-5d01-48da-abc0-f02339d2a5b6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "8c4aa276_runbook", "uuid": "61169cf0-b034-42a4-9d82-e978cd3cf085"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "2fc358da-627d-4675-8be2-b60bf9f73afc"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "1d794193_runbook", "uuid": "64f8d8db-a2e5-4b8b-93e6-3f8ca1f28a11"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e7d61529-b0ca-407b-8384-35857d004c0a"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "02695c22-fc1e-4d31-8e02-2767a7e8526f"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6088f0e0-7780-4a3e-8ec8-3003d356ab17"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "5e799894-f65d-404a-85df-be37655f5cf2"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "3d7f3644-84d4-4b01-9fa9-831137c317c9"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "b6951360-e78d-4824-bdfd-f2db95b36b54"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "66372a9c-8e96-4858-aa4b-60b167b59c67"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "1ebb904d-2ec0-4639-9ffc-b20be9b31a07"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6adc326a-9fa3-4484-b12d-92db464d16ac"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "9235604e-9103-4f07-b489-0253033f0dca"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "7a3efaa2-7a70-470b-aff7-fc327727fd70"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "787cf89d-7017-4243-9b84-bb4821a3b06c"}, "message_list": [], "variable_list": [], "uuid": "14fe8772-3bfb-4506-85b6-c9575808a99b"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete created VMs", "type": "system", "uuid": "b73df8cc-ae6a-465c-9dad-409fecfe3965", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Nutanix", "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "8e3db3da-86ee-4e40-8874-a3d9401eaafa"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a34784f0-3624-4a4e-a507-1cd19c3e4fa7"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "92ca9cfb-42f8-4bba-b7db-d86648209747"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "f3d386c8-676b-4472-a86b-e0dddf123d75"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "0faeb775-ffcc-49b4-a610-67901249e32b"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ce09a11b-37f3-4f01-a357-0f06785f7747"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "5b9caaaa-faee-4914-a17a-626976dad77c"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "059c30cc-e2ce-4fa4-8528-58d1054400bc"}], "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "a34784f0-3624-4a4e-a507-1cd19c3e4fa7"}, "edge_type": "inherent", "type": "", "uuid": "74ae09d4-303e-458e-814d-af3889ee0317", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "92ca9cfb-42f8-4bba-b7db-d86648209747"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ce09a11b-37f3-4f01-a357-0f06785f7747"}, "edge_type": "inherent", "type": "", "uuid": "a65eb521-adff-4fb3-9fcc-449beee3876e", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "uuid": "059c30cc-e2ce-4fa4-8528-58d1054400bc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "92ca9cfb-42f8-4bba-b7db-d86648209747"}, "edge_type": "inherent", "type": "", "uuid": "03a8eb25-2d4c-4163-bb2e-bfafe04b7257", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ce09a11b-37f3-4f01-a357-0f06785f7747"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "8e3db3da-86ee-4e40-8874-a3d9401eaafa"}, "edge_type": "inherent", "type": "", "uuid": "759e6816-f1af-48e0-9d3d-437d2757a927", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "f3d386c8-676b-4472-a86b-e0dddf123d75"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "0faeb775-ffcc-49b4-a610-67901249e32b"}, "edge_type": "inherent", "type": "", "uuid": "55d0c806-7abc-4c87-a56f-9ac46f5bb5ac", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "uuid": "5b9caaaa-faee-4914-a17a-626976dad77c"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "f3d386c8-676b-4472-a86b-e0dddf123d75"}, "edge_type": "inherent", "type": "", "uuid": "ab055f85-e322-46f3-94df-2eb6a16630b5", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "0faeb775-ffcc-49b4-a610-67901249e32b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "uuid": "92ca9cfb-42f8-4bba-b7db-d86648209747"}, "edge_type": "create_action_edge", "type": "", "uuid": "b2322490-90f9-4013-9ea2-df9b99ed0c89", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "0faeb775-ffcc-49b4-a610-67901249e32b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "uuid": "f3d386c8-676b-4472-a86b-e0dddf123d75"}, "edge_type": "create_action_edge", "type": "", "uuid": "b9a57c5e-bec5-4169-9a09-a96ddc37f727", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "ce09a11b-37f3-4f01-a357-0f06785f7747"}}], "type": "DAG"}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "uuid": "d22aecdd-2dfb-415f-a54c-01f27a6e21ed"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "faf2b093-c465-4559-88d1-cb4dd61b10c9"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_faf2b093_c465_4559_88d1_cb4dd61b10c9", "uuid": "33b4ef38-57c7-492a-8f45-bb91606ad36a"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "8e3db3da-86ee-4e40-8874-a3d9401eaafa"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "458191e1-561e-4541-8c21-2fddf0ddfc47"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_458191e1_561e_4541_8c21_2fddf0ddfc47", "uuid": "7283449d-70a5-4258-8989-510926d97bb1"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a34784f0-3624-4a4e-a507-1cd19c3e4fa7"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package", "uuid": "a39fd2c4-b643-4e8e-bd3f-fee13b6a9ac3"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_a39fd2c4_b643_4e8e_bd3f_fee13b6a9ac3", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "92ca9cfb-42f8-4bba-b7db-d86648209747"}, {"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package", "uuid": "380979ac-8899-4abf-9ac3-e8c93d62bfee"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_380979ac_8899_4abf_9ac3_e8c93d62bfee", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "f3d386c8-676b-4472-a86b-e0dddf123d75"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC", "uuid": "b6e71be6-0b4a-4b76-8ad5-11476fbe3c01"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b6e71be6_0b4a_4b76_8ad5_11476fbe3c01", "uuid": "8b49c08f-eece-4c81-a233-b407246669f3"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "0faeb775-ffcc-49b4-a610-67901249e32b"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM", "uuid": "ffbc8596-92de-403b-96e8-8417de261723"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_ffbc8596_92de_403b_96e8_8417de261723", "uuid": "c8c91f3d-8bb9-461d-a2eb-d2ff75f4bc1d"}}, "timeout_secs": "0", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "ce09a11b-37f3-4f01-a357-0f06785f7747"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "2cbb2f6a_deployment", "uuid": "e962fc7d-5f9d-44a0-ab33-7148ce269a68"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_e962fc7d_5f9d_44a0_ab33_7148ce269a68", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "5b9caaaa-faee-4914-a17a-626976dad77c"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment", "uuid": "d0c53cbc-90aa-47d3-803f-1583848c0c16"}, "retries": "0", "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_d0c53cbc_90aa_47d3_803f_1583848c0c16", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "0", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "059c30cc-e2ce-4fa4-8528-58d1054400bc"}], "description": "", "name": "SYS_GEN__Runbook_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_3f5404b9_f319_437a_8f3a_dbd25d774e5b", "uuid": "d22aecdd-2dfb-415f-a54c-01f27a6e21ed"}, "message_list": [], "variable_list": [], "uuid": "3db7308d-8993-4e94-9d97-6ab918649849"}, "message_list": [], "name": "action_soft_delete"}], "name": "Nutanix", "state": "ACTIVE", "message_list": [], "dependency_list": [{"getter_resource_kind": "PackageCfg", "setter_resource_attr": "address", "setter_resource_kind": "SubstrateCfg", "setter_resource_name": "AHV_Centos_K8SC", "action_name": "action_create", "action_resource_name": "Nutanix", "getter_resource_name": "AHV_Centos_K8SM_Package", "action_resource_kind": "ApplicationCfg"}, {"getter_resource_kind": "PackageCfg", "setter_resource_attr": "address", "setter_resource_kind": "SubstrateCfg", "setter_resource_name": "AHV_Centos_K8SM", "action_name": "action_create", "action_resource_name": "Nutanix", "getter_resource_name": "AHV_Centos_K8SC_Package", "action_resource_kind": "ApplicationCfg"}, {"getter_resource_kind": "PackageCfg", "setter_resource_attr": "address", "setter_resource_kind": "ServiceCfg", "setter_resource_name": "Kubernetes_Master", "action_name": "action_delete", "action_resource_name": "Nutanix", "getter_resource_name": "AHV_Centos_K8SM_Package", "action_resource_kind": "ApplicationCfg"}], "variable_list": [{"val_type": "STRING", "description": "", "name": "KUBE_CLUSTER_NAME", "type": "LOCAL", "value": "kube-calm", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "a88564f1-af44-4ede-a214-349b4ae6062e"}, {"val_type": "STRING", "description": "", "name": "KUBE_IMAGE_TAG", "type": "LOCAL", "value": "v1.10.3_coreos.0", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "c52672e1-c339-4cdf-949a-32d60ca6f9ce"}, {"val_type": "STRING", "description": "", "name": "DOCKER_VERSION", "type": "LOCAL", "value": "17.03.2.ce", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "df7b25b1-4e8a-4191-9750-541028f40c38"}, {"val_type": "STRING", "description": "", "name": "KUBE_CLUSTER_SUBNET", "type": "LOCAL", "value": "10.200.0.0/16", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "98fd3d1e-2f44-4b4f-a2a2-2c0bb6d0fca1"}, {"val_type": "STRING", "description": "", "name": "KUBE_SERVICE_SUBNET", "type": "LOCAL", "value": "10.32.0.0/24", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "a220b5fd-d8b2-4a63-a666-57609e9e0739"}, {"val_type": "STRING", "description": "", "name": "KUBE_DNS_IP", "type": "LOCAL", "value": "10.32.0.10", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "799b4be0-85a3-4e38-b244-c5839d3b9866"}, {"val_type": "STRING", "description": "", "name": "PE_CLUSTER_IP", "type": "LOCAL", "value": "192.168.178.70", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "f80c2d8a-e4e4-4655-8b27-9e5571c1bf58"}, {"val_type": "STRING", "description": "", "name": "PE_DATA_SERVICE_IP", "type": "LOCAL", "value": "192.168.178.79", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "82bcd2bc-8c22-4fb0-b39d-56108ab38cce"}, {"val_type": "STRING", "description": "", "name": "PE_USERNAME", "type": "LOCAL", "value": "admin", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "961b23ab-0ebc-44ec-a607-47751095b558"}, {"val_type": "STRING", "description": "", "name": "PE_PASSWORD", "type": "SECRET", "value": "", "label": "", "state": "ACTIVE", "attrs": {"is_secret_modified": false, "secret_reference": {"uuid": "a9a0f74b-5706-401c-ab32-401f453f9fbe"}, "type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "ee1c12fe-0bd0-4662-8a66-6d104fc89125"}, {"val_type": "STRING", "description": "", "name": "PE_CONTAINER_NAME", "type": "LOCAL", "value": "prod", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "d53476ab-21b0-4254-a28f-5d8faee1b523"}, {"val_type": "STRING", "description": "", "name": "INSTANCE_PUBLIC_KEY", "type": "LOCAL", "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCle6/np/b7emBki+KeDJ7r3BNqdeGqewX/ziXfD5Fv/hbt/dkp4zSAtH3XmfAZCC6g2vmar47D6b3VZRtC1yt71jNCgfGgvh/rwgZ8pZPZT/DE3FGSiAbeXhbrTTusNu3sZOqT9NQOCxevQuaqQ0uw7PN0exNykiPE5T/L1vY+0r+ReOJOqomoFpHukCtJqr4eE1AJb4WM/kZgLABnA7yYvEloDP5cNpP3SLbK+3nbW7rCjwaq0Swx80p8Gm8XkkRFeoXEyQr1d6Wf7PErenhU8a11wuDkEGODhBX+YrnokhL5j7wtRn2Ze1JJRZTlEyA7l2fVa7uBvK0/WBb7phC8cvcNQ9lxh0gJlWJpO3AdshJm9uhhIOsEke7KuI6IN1qpGOzAa7xxDwVwp7BiI34PvrgP18/hb1yPAKsiuf2PoJBn5MHCC6q1j9WWKM0O2ozojFPK/DH80jsNLPGQb2r+cpJoXA8XAm9CkRKjU1b71f0zRG6Ku7WiOqq4BpLFbpQrFaXbWYAxzLB6HSBVeukrS7gxKeP+h5ByWr3dE0AsIb+QbPvyzfT4IGr8G4BzySQfLp4XM1RCVAOKz10JUIvP0MTwj9C8zrVUvEzHF1WMQMyHtpo//BWDOWrw1xt/xyeTZaQtPuD6Gylt9pO4TtQMBiOSW7BcfS8BxnvCPxR/kQ== thomas@thomas-findelkind.de", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "c5d68927-5661-426e-b058-b88e2e18d714"}, {"val_type": "STRING", "description": "", "name": "KUBE_IMAGE_TAG_NEW", "type": "LOCAL", "value": "x", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {}, "message_list": [], "uuid": "bea35aa9-bd70-4ad2-a5a6-590b71f21c99"}, {"val_type": "STRING", "description": "", "name": "YUM_PROXY", "type": "LOCAL", "value": "http://10.200.200.200:8081/repository/yum-default", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {}, "message_list": [], "uuid": "a67fd481-9fcc-4fda-a789-1b5ab0d3bb23"}, {"val_type": "STRING", "description": "", "name": "HTTP_PROXY", "type": "LOCAL", "value": "http://10.200.200.200:3128", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {}, "message_list": [], "uuid": "0b8a63e5-2adf-4fee-b9fb-a763245530ef"}, {"val_type": "STRING", "description": "", "name": "HTTPS_PROXY", "type": "LOCAL", "value": "https://10.200.200.200:3128", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {}, "message_list": [], "uuid": "e1378919-34bc-474f-96c1-136042224708"}, {"val_type": "STRING", "description": "", "name": "NO_PROXY", "type": "LOCAL", "value": "", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {}, "message_list": [], "uuid": "6b6d9354-f6ea-4caa-bf17-3b1fe2141839"}], "uuid": "3f5404b9-f319-437a-8f3a-dbd25d774e5b"}], "default_credential_local_reference": {"kind": "app_credential", "name": "CENTOS", "uuid": "d4e8ea35-b361-492d-ad1d-45ccd000f836"}, "type": "USER"}, "name": "KALM2_Proxy"}, "spec": {"description": "", "resources": {"service_definition_list": [{"singleton": false, "name": "Kubernetes_Master", "action_list": [{"critical": false, "type": "system", "description": "System action for creating an application", "name": "action_create", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Dashboard"}, {"kind": "app_task", "name": "HELM"}], "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Dashboard"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "HELM"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "f33eac3f_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          # Create on-disk volume to store exec logs\n        - mountPath: /tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | sudo tee /etc/kubernetes/addons/dashboard/kubernetes-dashboard.yaml\nkubectl create -f /etc/kubernetes/addons/dashboard/kubernetes-dashboard.yaml\n"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Dashboard"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\nsudo mkdir /etc/kubernetes/addons/helm\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | sudo tee /etc/kubernetes/addons/helm/helm.yaml\n\nkubectl create -f /etc/kubernetes/addons/helm/helm.yaml\nhelm init --service-account helm\n"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "HELM"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "f33eac3f_dag"}, "name": "a9639da1_runbook"}}, {"critical": false, "type": "system", "description": "System action for deleting an application. Deletes created VMs as well", "name": "action_delete", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "62a92d34_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "62a92d34_dag"}, "name": "8c4aa276_runbook"}}, {"critical": false, "type": "system", "description": "System action for starting an application", "name": "action_start", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "334b4484_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Start"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "334b4484_dag"}, "name": "daee30ae_runbook"}}, {"critical": false, "type": "system", "description": "System action for stopping an application", "name": "action_stop", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "9713c3d0_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "9713c3d0_dag"}, "name": "6407a345_runbook"}}, {"critical": false, "type": "system", "description": "System action for restarting an application", "name": "action_restart", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "414912df_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "414912df_dag"}, "name": "d5c8316f_runbook"}}], "description": "", "port_list": [], "tier": "", "variable_list": [], "depends_on_list": []}, {"singleton": false, "name": "Kubernetes_Minion", "action_list": [{"critical": false, "type": "system", "description": "System action for creating an application", "name": "action_create", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "4af7c45f_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "4af7c45f_dag"}, "name": "7c6e4932_runbook"}}, {"critical": false, "type": "system", "description": "System action for deleting an application. Deletes created VMs as well", "name": "action_delete", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "1e2c50bb_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "1e2c50bb_dag"}, "name": "1d794193_runbook"}}, {"critical": false, "type": "system", "description": "System action for starting an application", "name": "action_start", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "970128c7_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nsudo systemctl start docker kubelet\nsudo systemctl enable docker kubelet"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Start"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "970128c7_dag"}, "name": "884352cf_runbook"}}, {"critical": false, "type": "system", "description": "System action for stopping an application", "name": "action_stop", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "6c01dc28_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "6c01dc28_dag"}, "name": "0cb172a7_runbook"}}, {"critical": false, "type": "system", "description": "System action for restarting an application", "name": "action_restart", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "1d66b5be_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "1d66b5be_dag"}, "name": "3a6f587d_runbook"}}], "description": "", "port_list": [], "tier": "", "variable_list": [], "depends_on_list": []}], "substrate_definition_list": [{"description": "", "action_list": [], "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "type": "AHV_VM", "create_spec": {"name": "K8SC-@@{calm_array_index}@@-@@{calm_time}@@", "categories": "", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 1, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 2, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 3, "type": ""}}}]}}, "variable_list": [], "name": "AHV_Centos_K8SC"}, {"description": "", "action_list": [], "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "120", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "type": "AHV_VM", "create_spec": {"name": "K8SM-@@{calm_array_index}@@-@@{calm_time}@@", "categories": "", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "33c97f77-2afd-4331-a2cc-542934091a48"}, "type": ""}], "serial_port_list": [], "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 4, "gpu_list": [], "memory_size_mib": 4096, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "power_state": "ON", "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "app_package", "type": "", "name": "CENTOS_74", "uuid": "7bbed456-01fb-4879-8931-e549fdeb18ef"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 1, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 2, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 10240, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 3, "type": ""}}}]}}, "variable_list": [], "name": "AHV_Centos_K8SM"}], "credential_definition_list": [{"username": "centos", "description": "", "secret": {"attrs": {"is_secret_modified": false, "secret_reference": {}}}, "editables": {"username": true, "secret": true}, "type": "KEY", "name": "CENTOS"}], "package_definition_list": [{"description": "", "action_list": [], "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Master"}], "version": "", "type": "DEB", "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package"}, "retries": "0", "description": "", "type": "DAG", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download"}, {"kind": "app_task", "name": "ETCD Docker Kubelet Install"}, {"kind": "app_task", "name": "Generate Certs"}, {"kind": "app_task", "name": "Configure Services"}, {"kind": "app_task", "name": "Add User Roles"}, {"kind": "app_task", "name": "Network Configuration"}, {"kind": "app_task", "name": "DNS Configuration"}, {"kind": "app_task", "name": "NVP Configuration"}], "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Generate Certs"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Configure Services"}}, {"from_task_reference": {"kind": "app_task", "name": "Configure Services"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Add User Roles"}}, {"from_task_reference": {"kind": "app_task", "name": "Add User Roles"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Network Configuration"}}, {"from_task_reference": {"kind": "app_task", "name": "Network Configuration"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "DNS Configuration"}}, {"from_task_reference": {"kind": "app_task", "name": "DNS Configuration"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "NVP Configuration"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install"}}, {"from_task_reference": {"kind": "app_task", "name": "ETCD Docker Kubelet Install"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Generate Certs"}}], "type": ""}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "dac441af_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\n#global proxy settings\necho \"http_proxy=${HTTP_PROXY}\nhttps_proxy=${HTTPS_PROXY}\nno_proxy=${NO_PROXY}\" | sudo tee --append /etc/environment\nfi\n\nsudo easy_install netaddr\n\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo rm /etc/environment\nfi\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS"}}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Proxy_Download"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\n# sudo easy_install netaddr\n\nETCD_VERSION=\"v3.2.11\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \n#wget -q \"https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/etcd.service\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\n# wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n# wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n# wget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.1-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm /usr/local/bin/\nrm -rf helm-v2.8.1-linux-amd64.tar.gz linux-amd64"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "ETCD Docker Kubelet Install"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Generate Certs"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Configure Services"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nCOUNT=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/proxy\n      - nodes/stats\n      - nodes/log\n      - nodes/spec\n      - nodes/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Add User Roles"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nexport PATH=$PATH:/opt/bin\nsudo mkdir -p /etc/kubernetes/addons/flannel\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.10.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee /etc/kubernetes/addons/flannel/kube-flannel.yml\nkubectl create -f /etc/kubernetes/addons/flannel/kube-flannel.yml\nsleep 15\n"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Network Configuration"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments/scale\", \"replicasets/scale\"]\n    verbs: [\"get\", \"update\"]\n# Remove the configmaps rule once below issue is fixed:\n# kubernetes-incubator/cluster-proportional-autoscaler#16\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps/v1beta2 #extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - /cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          # Should keep target in sync with cluster/addons/dns/kube-dns.yaml.base\n          - --target=Deployment/kube-dns\n          # When cluster is using large nodes(with more cores), \"coresPerReplica\" should dominate.\n          # If using small nodes, \"nodesPerReplica\" should dominate.\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns.yaml\nkubectl create -f /etc/kubernetes/addons/kubedns/kube-dns-autoscaler.yaml\n"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "DNS Configuration"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:/opt/bin\n\nsudo mkdir /etc/kubernetes/addons/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io/is-default-class: \"true\"\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | sudo tee -a /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nsudo sed -i \"s/<SECRET>/${NTNX_SECRET}/\" /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\nkubectl create -f /etc/kubernetes/addons/volume_plugin/ntnx-secret.yaml\n"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "NVP Configuration"}], "description": "", "state": "ACTIVE", "variable_list": [], "message_list": [], "main_task_local_reference": {"kind": "app_task", "name": "dac441af_dag"}, "name": "8e760b73_runbook"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SC_Package"}, "retries": "0", "description": "", "type": "DAG", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "6324786a_dag"}], "description": "", "state": "ACTIVE", "variable_list": [], "message_list": [], "main_task_local_reference": {"kind": "app_task", "name": "6324786a_dag"}, "name": "6522ac7a_runbook"}}, "variable_list": [], "name": "AHV_Centos_K8SC_Package"}, {"description": "", "action_list": [], "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Minion"}], "version": "", "type": "DEB", "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package"}, "retries": "0", "description": "", "type": "DAG", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Proxy_Download"}, {"kind": "app_task", "name": "Docker Kubelet Install"}, {"kind": "app_task", "name": "GetCerts"}], "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "GetCerts"}}, {"from_task_reference": {"kind": "app_task", "name": "Proxy_Download"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Docker Kubelet Install"}}], "type": ""}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "c1566b3d_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"exit_status": [], "script": "#!/bin/bash\nset -ex\n\nHTTP_PROXY=\"@@{HTTP_PROXY}@@\"\nHTTPS_PROXY=\"@@{HTTPS_PROXY}@@\"\nNO_PROXY=\"@@{NO_PROXY}@@\"\nYUM_PROXY=\"@@{YUM_PROXY}@@\"\n\nif [ -n  \"@@{YUM_PROXY}@@\" ];then\necho \"[nexus]\nname=Nexus Repository\nbaseurl=${YUM_PROXY}/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\npriority=1\" | sudo tee /etc/yum.repos.d/nexus.repo\nfi\n\n# yum proxy config when nexus not used\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"proxy=${HTTP_PROXY}\" | sudo tee --append /etc/yum.conf\nfi\n\n# wget proxy config\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\necho \"http_proxy = ${HTTP_PROXY}\nhttps_proxy = ${HTTPS_PROXY}\" | sudo tee --append /etc/wgetrc\nfi\n\n# docker proxy\nif [ -n  \"@@{HTTP_PROXY}@@\" ];then\nsudo mkdir -p /etc/systemd/system/docker.service.d\n\necho \"[Service]\nEnvironment=\\\"HTTP_PROXY=${HTTP_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf\necho \"[Service]\nEnvironment=\\\"HTTPS_PROXY=${HTTPS_PROXY}\\\"\" | sudo tee /etc/systemd/system/docker.service.d/https-proxy.conf\nfi\n\nsudo yum update -y --quiet\nsudo yum install -y wget --quiet\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=150 -t 0 https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64", "script_type": "sh", "type": "", "command_line_args": "", "login_credential_local_reference": {"kind": "app_credential", "name": "CENTOS"}}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Proxy_Download"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG}@@\"\nif [[ \"@@{KUBE_IMAGE_TAG_NEW}@@x\" != \"x\" ]]; then\n\tKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nfi\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{AHV_Centos_K8SC.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\n#sudo yum update -y --quiet\n#sudo yum install -y wget iscsi-initiator-utils socat --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\n#wget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\n#wget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\n#wget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl /usr/bin/\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\n\nsudo sed -i '/ExecStart=/c\\\\ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock' /usr/lib/systemd/system/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p /etc/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee /etc/docker/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a /etc/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\n#while [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\n#sudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\n#sudo chmod +r ${KUBE_CERT_PATH}/*\n\n#sudo systemctl start docker kubelet iscsid\n#sudo systemctl enable docker kubelet iscsid"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Docker Kubelet Install"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SC.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"minion@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls /opt/kube-ssl/encryption-config.yaml 2>/dev/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:/opt/kube-ssl/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"minion@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https://${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nrm -rf ${instance}-csr.json"}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "GetCerts"}], "description": "", "state": "ACTIVE", "variable_list": [], "message_list": [], "main_task_local_reference": {"kind": "app_task", "name": "c1566b3d_dag"}, "name": "9a6e189b_runbook"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "AHV_Centos_K8SM_Package"}, "retries": "0", "description": "", "type": "DAG", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Remove Node"}], "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "abd3357c_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "type": "EXEC", "child_tasks_local_reference_list": [], "state": "ACTIVE", "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'minion@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'minion@@{calm_array_index}@@'\""}, "timeout_secs": "0", "message_list": [], "variable_list": [], "name": "Remove Node"}], "description": "", "state": "ACTIVE", "variable_list": [], "message_list": [], "main_task_local_reference": {"kind": "app_task", "name": "abd3357c_dag"}, "name": "3cb17acf_runbook"}}, "variable_list": [], "name": "AHV_Centos_K8SM_Package"}, {"description": "", "action_list": [], "service_local_reference_list": [], "version": "", "type": "SUBSTRATE_IMAGE", "options": {"type": "", "name": "CENTOS_74", "resources": {"image_type": "DISK_IMAGE", "checksum": {"checksum_algorithm": "", "type": "", "checksum_value": ""}, "source_uri": "http://download.nutanix.com/calm/CentOS-7-x86_64-GenericCloud.qcow2", "version": {"product_version": "", "type": "", "product_name": ""}, "architecture": "X86_64", "type": ""}, "description": ""}, "variable_list": [], "name": "CENTOS_74"}], "app_profile_list": [{"deployment_create_list": [{"name": "2cbb2f6a_deployment", "action_list": [], "package_local_reference_list": [{"kind": "app_package", "name": "AHV_Centos_K8SC_Package"}], "editables": {"min_replicas": true, "max_replicas": true}, "min_replicas": "3", "max_replicas": "3", "substrate_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SC"}, "type": "GREENFIELD", "variable_list": [], "description": ""}, {"name": "39cf7283_deployment", "action_list": [], "package_local_reference_list": [{"kind": "app_package", "name": "AHV_Centos_K8SM_Package"}], "editables": {"min_replicas": true, "max_replicas": true}, "min_replicas": "3", "max_replicas": "9", "substrate_local_reference": {"kind": "app_substrate", "name": "AHV_Centos_K8SM"}, "type": "GREENFIELD", "variable_list": [], "description": ""}], "variable_list": [{"val_type": "STRING", "description": "", "value": "kube-calm", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_CLUSTER_NAME"}, {"val_type": "STRING", "description": "", "value": "v1.10.3_coreos.0", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_IMAGE_TAG"}, {"val_type": "STRING", "description": "", "value": "17.03.2.ce", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "DOCKER_VERSION"}, {"val_type": "STRING", "description": "", "value": "10.200.0.0/16", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_CLUSTER_SUBNET"}, {"val_type": "STRING", "description": "", "value": "10.32.0.0/24", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_SERVICE_SUBNET"}, {"val_type": "STRING", "description": "", "value": "10.32.0.10", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_DNS_IP"}, {"val_type": "STRING", "description": "", "value": "192.168.178.70", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PE_CLUSTER_IP"}, {"val_type": "STRING", "description": "", "value": "192.168.178.79", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PE_DATA_SERVICE_IP"}, {"val_type": "STRING", "description": "", "value": "admin", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PE_USERNAME"}, {"val_type": "STRING", "description": "", "value": "", "label": "", "attrs": {"is_secret_modified": false, "secret_reference": {}, "type": ""}, "editables": {"value": true}, "type": "SECRET", "name": "PE_PASSWORD"}, {"val_type": "STRING", "description": "", "value": "prod", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PE_CONTAINER_NAME"}, {"val_type": "STRING", "description": "", "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCle6/np/b7emBki+KeDJ7r3BNqdeGqewX/ziXfD5Fv/hbt/dkp4zSAtH3XmfAZCC6g2vmar47D6b3VZRtC1yt71jNCgfGgvh/rwgZ8pZPZT/DE3FGSiAbeXhbrTTusNu3sZOqT9NQOCxevQuaqQ0uw7PN0exNykiPE5T/L1vY+0r+ReOJOqomoFpHukCtJqr4eE1AJb4WM/kZgLABnA7yYvEloDP5cNpP3SLbK+3nbW7rCjwaq0Swx80p8Gm8XkkRFeoXEyQr1d6Wf7PErenhU8a11wuDkEGODhBX+YrnokhL5j7wtRn2Ze1JJRZTlEyA7l2fVa7uBvK0/WBb7phC8cvcNQ9lxh0gJlWJpO3AdshJm9uhhIOsEke7KuI6IN1qpGOzAa7xxDwVwp7BiI34PvrgP18/hb1yPAKsiuf2PoJBn5MHCC6q1j9WWKM0O2ozojFPK/DH80jsNLPGQb2r+cpJoXA8XAm9CkRKjU1b71f0zRG6Ku7WiOqq4BpLFbpQrFaXbWYAxzLB6HSBVeukrS7gxKeP+h5ByWr3dE0AsIb+QbPvyzfT4IGr8G4BzySQfLp4XM1RCVAOKz10JUIvP0MTwj9C8zrVUvEzHF1WMQMyHtpo//BWDOWrw1xt/xyeTZaQtPuD6Gylt9pO4TtQMBiOSW7BcfS8BxnvCPxR/kQ== thomas@thomas-findelkind.de", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "INSTANCE_PUBLIC_KEY"}, {"val_type": "STRING", "description": "", "value": "x", "label": "", "attrs": {"type": ""}, "type": "LOCAL", "name": "KUBE_IMAGE_TAG_NEW"}, {"val_type": "STRING", "description": "", "value": "http://10.200.200.200:8081/repository/yum-default", "label": "", "attrs": {"type": ""}, "type": "LOCAL", "name": "YUM_PROXY"}, {"val_type": "STRING", "description": "", "value": "http://10.200.200.200:3128", "label": "", "attrs": {"type": ""}, "type": "LOCAL", "name": "HTTP_PROXY"}, {"val_type": "STRING", "description": "", "value": "https://10.200.200.200:3128", "label": "", "attrs": {"type": ""}, "type": "LOCAL", "name": "HTTPS_PROXY"}, {"val_type": "STRING", "description": "", "value": "", "label": "", "attrs": {"type": ""}, "type": "LOCAL", "name": "NO_PROXY"}], "description": "", "action_list": [{"critical": false, "type": "user", "description": "", "name": "Upgrade", "runbook": {"variable_list": [{"val_type": "STRING", "description": "", "value": "v1.8.0_coreos.0", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_IMAGE_TAG_NEW"}], "task_definition_list": [{"retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Upgrade Minion"}, {"kind": "app_task", "name": "Upgrade Controller"}, {"kind": "app_task", "name": "Restart Service"}], "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Upgrade Controller"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Restart Service"}}, {"from_task_reference": {"kind": "app_task", "name": "Upgrade Minion"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Restart Service"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "6ee65d8a_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% \\\\\n  --node-labels 'node-role.kubernetes.io/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Upgrade Minion"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=false \\\\\n  --authorization-mode=Webhook \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --runtime-request-timeout=10m \\\\\n  --client-ca-file=${KUBE_CERT_PATH}/ca.pem \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/${NODE_NAME}.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/${NODE_NAME}-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --runtime-cgroups=/systemd/system.slice \\\\\n  --kubelet-cgroups=/systemd/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --insecure-port=0\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api/all\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: /etc/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: /etc/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Upgrade Controller"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBELET_IMAGE_TAG=\"@@{KUBE_IMAGE_TAG_NEW}@@\"\nMASTER_API_HTTPS=6443\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/kubectl\n\ncount=0\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://${INTERNAL_IP}:${MASTER_API_HTTPS}/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https://${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n  \techo \"Unable to reach master server: https://${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n  \texit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${MINION_IPS}\" | tr \",\" \"\\n\"); do\n  kubectl drain \"minion${count}\" --ignore-daemonsets --delete-local-data --force\n  sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io/hostname=minion${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>/dev/null` ]]; do sleep 10 ; done\n  kubectl uncordon minion${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on minion nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  kubectl drain \"controller${count}\" --ignore-daemonsets --delete-local-data --force\n  sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io/hostname=controller${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>/dev/null` ]]; do sleep 10 ; done\n  kubectl uncordon controller${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Restart Service"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "6ee65d8a_dag"}, "name": "68a7ffd0_runbook"}}, {"critical": false, "type": "user", "description": "", "name": "ScaleOut", "runbook": {"variable_list": [{"val_type": "STRING", "description": "", "value": "v1.8.0_coreos.0", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_IMAGE_TAG_NEW"}, {"val_type": "STRING", "description": "", "value": "1", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "COUNT"}], "task_definition_list": [{"retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Scale Out"}, {"kind": "app_task", "name": "Set Hosts file"}], "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "Scale Out"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Set Hosts file"}}], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "03b33121_dag"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"scaling_count": "@@{COUNT}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "name": "Scale Out"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nMINION_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} minion${count}\" /etc/hosts) )) ; then\n  \techo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  fi\n  count=$((count+1))\ndone"}, "timeout_secs": "0", "type": "EXEC", "variable_list": [], "name": "Set Hosts file"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "03b33121_dag"}, "name": "00cf5417_runbook"}}, {"critical": false, "type": "user", "description": "", "name": "ScaleIn", "runbook": {"variable_list": [{"val_type": "STRING", "description": "", "value": "1", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "COUNT"}], "task_definition_list": [{"retries": "0", "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Scale In"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "0", "type": "DAG", "variable_list": [], "name": "e72a9133_dag"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "39cf7283_deployment"}, "retries": "0", "description": "", "child_tasks_local_reference_list": [], "attrs": {"scaling_count": "@@{COUNT}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "0", "type": "SCALING", "variable_list": [], "name": "Scale In"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "e72a9133_dag"}, "name": "96546f6c_runbook"}}], "name": "Nutanix"}], "default_credential_local_reference": {"kind": "app_credential", "name": "CENTOS"}, "type": "USER", "client_attrs": {"Kubernetes_Master": {"y": 200, "x": 360}, "Kubernetes_Minion": {"y": 200, "x": 640}}}, "name": "KALM2_Proxy"}, "api_version": "3.0", "metadata": {"last_update_time": "1529835890354680", "creation_time": "1529826171622066", "kind": "blueprint", "spec_version": 15, "name": "KALM2_Proxy"}}